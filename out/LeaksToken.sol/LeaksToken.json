{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "multisig_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "blockLeaksContract_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "backingDifference",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockLeaksContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claimDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimMaxDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isVaultFullfilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "maxClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multisig",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620012a3380380620012a38339810160408190526200003491620000ec565b604080518082018252601081526f213637b1b5a632b0b5b9902a37b5b2b760811b602080830191909152825180840190935260058352644c45414b5360d81b9083015260016000559060046200008b8382620001d0565b5060056200009a8282620001d0565b5050600680546001600160a01b039485166001600160a01b0319918216179091556007805493909416921691909117909155506200029c565b6001600160a01b0381168114620000e957600080fd5b50565b600080604083850312156200010057600080fd5b82516200010d81620000d3565b60208401519092506200012081620000d3565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200015657607f821691505b6020821081036200017757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cb57600081815260208120601f850160051c81016020861015620001a65750805b601f850160051c820191505b81811015620001c757828155600101620001b2565b5050505b505050565b81516001600160401b03811115620001ec57620001ec6200012b565b6200020481620001fd845462000141565b846200017d565b602080601f8311600181146200023c5760008415620002235750858301515b600019600386901b1c1916600185901b178555620001c7565b600085815260208120601f198616915b828110156200026d578886015182559484019460019091019084016200024c565b50858210156200028c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610ff780620002ac6000396000f3fe60806040526004361061012e5760003560e01c806342966c68116100ab5780637872be301161006f5780637872be30146103ab57806379cc6790146103cb57806395d89b41146103eb578063a457c2d714610400578063a9059cbb14610420578063dd62ed3e1461044057600080fd5b806342966c68146102f35780634783c35b146103135780634f38a4031461034b5780636fe02e6c1461036057806370a082311461037557600080fd5b806325f3df5b116100f257806325f3df5b14610257578063313ce5671461027757806339509351146102935780633f4564be146102b357806340c10f19146102d357600080fd5b806306fdde03146101a4578063095ea7b3146101cf5780630f9d07e4146101ff57806318160ddd1461022257806323b872dd1461023757600080fd5b3661019f5761013b610460565b60006101456104be565b905034811015610192576006546001600160a01b03166108fc6101688334610e23565b6040518115909202916000818181858888f19350505050158015610190573d6000803e3d6000fd5b505b5061019d6001600055565b005b600080fd5b3480156101b057600080fd5b506101b96104d9565b6040516101c69190610e36565b60405180910390f35b3480156101db57600080fd5b506101ef6101ea366004610ea0565b61056b565b60405190151581526020016101c6565b34801561020b57600080fd5b506102146104be565b6040519081526020016101c6565b34801561022e57600080fd5b50600354610214565b34801561024357600080fd5b506101ef610252366004610eca565b610585565b34801561026357600080fd5b50610214610272366004610f06565b6105a9565b34801561028357600080fd5b50604051601281526020016101c6565b34801561029f57600080fd5b506101ef6102ae366004610ea0565b6105ec565b3480156102bf57600080fd5b5061019d6102ce366004610f28565b61060e565b3480156102df57600080fd5b5061019d6102ee366004610ea0565b6106be565b3480156102ff57600080fd5b5061019d61030e366004610f28565b61073f565b34801561031f57600080fd5b50600654610333906001600160a01b031681565b6040516001600160a01b0390911681526020016101c6565b34801561035757600080fd5b5061019d610749565b34801561036c57600080fd5b506101ef6107ec565b34801561038157600080fd5b50610214610390366004610f06565b6001600160a01b031660009081526001602052604090205490565b3480156103b757600080fd5b50600754610333906001600160a01b031681565b3480156103d757600080fd5b5061019d6103e6366004610ea0565b6107fe565b3480156103f757600080fd5b506101b9610813565b34801561040c57600080fd5b506101ef61041b366004610ea0565b610822565b34801561042c57600080fd5b506101ef61043b366004610ea0565b61089d565b34801561044c57600080fd5b5061021461045b366004610f41565b6108ab565b6002600054036104b75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055565b6000476104ca60035490565b6104d49190610e23565b905090565b6060600480546104e890610f74565b80601f016020809104026020016040519081016040528092919081815260200182805461051490610f74565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b5050505050905090565b6000336105798185856108d6565b60019150505b92915050565b6000336105938582856109fb565b61059e858585610a75565b506001949350505050565b6001600160a01b03811660009081526001602052604081205447116105ce574761057f565b6001600160a01b03821660009081526001602052604090205461057f565b6000336105798185856105ff83836108ab565b6106099190610fae565b6108d6565b610616610460565b3381610621826105a9565b101561066f5760405162461bcd60e51b815260206004820152601a60248201527f20436c61696d206d6f7265207468616e2020706f737369626c6500000000000060448201526064016104ae565b6106798183610c20565b6040516001600160a01b0382169083156108fc029084906000818181858888f193505050501580156106af573d6000803e3d6000fd5b50506106bb6001600055565b50565b6007546001600160a01b0316336001600160a01b0316146107315760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920426c6f636b4c65616b7320436f6e74726163742063616e206d696e6044820152663a103a37b5b2b760c91b60648201526084016104ae565b61073b8282610d4c565b5050565b6106bb3382610c20565b610751610460565b33600061075d826105a9565b90506000811161079d5760405162461bcd60e51b815260206004820152600b60248201526a21b630b4b69032b93937b960a91b60448201526064016104ae565b6107a78282610c20565b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156107dd573d6000803e3d6000fd5b5050506107ea6001600055565b565b60006107f760035490565b4710905090565b6108098233836109fb565b61073b8282610c20565b6060600580546104e890610f74565b6000338161083082866108ab565b9050838110156108905760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104ae565b61059e82868684036108d6565b600033610579818585610a75565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6001600160a01b0383166109385760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104ae565b6001600160a01b0382166109995760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104ae565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610a0784846108ab565b90506000198114610a6f5781811015610a625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104ae565b610a6f84848484036108d6565b50505050565b6001600160a01b038316610ad95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104ae565b6001600160a01b038216610b3b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104ae565b6001600160a01b03831660009081526001602052604090205481811015610bb35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104ae565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c139086815260200190565b60405180910390a3610a6f565b6001600160a01b038216610c805760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104ae565b6001600160a01b03821660009081526001602052604090205481811015610cf45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104ae565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109ee565b6001600160a01b038216610da25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104ae565b8060036000828254610db49190610fae565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561057f5761057f610e0d565b600060208083528351808285015260005b81811015610e6357858101830151858201604001528201610e47565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610e9b57600080fd5b919050565b60008060408385031215610eb357600080fd5b610ebc83610e84565b946020939093013593505050565b600080600060608486031215610edf57600080fd5b610ee884610e84565b9250610ef660208501610e84565b9150604084013590509250925092565b600060208284031215610f1857600080fd5b610f2182610e84565b9392505050565b600060208284031215610f3a57600080fd5b5035919050565b60008060408385031215610f5457600080fd5b610f5d83610e84565b9150610f6b60208401610e84565b90509250929050565b600181811c90821680610f8857607f821691505b602082108103610fa857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561057f5761057f610e0d56fea26469706673582212205f92fb3c1aa8944a57b9183a22e7b83ba38afc036f86fe44becb6248eec9c06d64736f6c63430008130033",
    "sourceMap": "261:1703:39:-:0;;;444:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:18;;;;;;;;;;;-1:-1:-1;;;1976:113:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:18;;;;1716:1:17;-1:-1:-1;1821:22:17;1976:113:18;2042:5;:13;1976:113;2042:5;:13;:::i;:::-;-1:-1:-1;2065:7:18;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;557:8:39::1;:20:::0;;-1:-1:-1;;;;;557:20:39;;::::1;-1:-1:-1::0;;;;;;557:20:39;;::::1;;::::0;;;587:18:::1;:40:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;261:1703:39;;14:139:42;-1:-1:-1;;;;;97:31:42;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:409::-;245:6;253;306:2;294:9;285:7;281:23;277:32;274:52;;;322:1;319;312:12;274:52;354:9;348:16;373:39;406:5;373:39;:::i;:::-;481:2;466:18;;460:25;431:5;;-1:-1:-1;494:41:42;460:25;494:41;:::i;:::-;554:7;544:17;;;158:409;;;;;:::o;572:127::-;633:10;628:3;624:20;621:1;614:31;664:4;661:1;654:15;688:4;685:1;678:15;704:380;783:1;779:12;;;;826;;;847:61;;901:4;893:6;889:17;879:27;;847:61;954:2;946:6;943:14;923:18;920:38;917:161;;1000:10;995:3;991:20;988:1;981:31;1035:4;1032:1;1025:15;1063:4;1060:1;1053:15;917:161;;704:380;;;:::o;1215:545::-;1317:2;1312:3;1309:11;1306:448;;;1353:1;1378:5;1374:2;1367:17;1423:4;1419:2;1409:19;1493:2;1481:10;1477:19;1474:1;1470:27;1464:4;1460:38;1529:4;1517:10;1514:20;1511:47;;;-1:-1:-1;1552:4:42;1511:47;1607:2;1602:3;1598:12;1595:1;1591:20;1585:4;1581:31;1571:41;;1662:82;1680:2;1673:5;1670:13;1662:82;;;1725:17;;;1706:1;1695:13;1662:82;;;1666:3;;;1306:448;1215:545;;;:::o;1936:1352::-;2056:10;;-1:-1:-1;;;;;2078:30:42;;2075:56;;;2111:18;;:::i;:::-;2140:97;2230:6;2190:38;2222:4;2216:11;2190:38;:::i;:::-;2184:4;2140:97;:::i;:::-;2292:4;;2356:2;2345:14;;2373:1;2368:663;;;;3075:1;3092:6;3089:89;;;-1:-1:-1;3144:19:42;;;3138:26;3089:89;-1:-1:-1;;1893:1:42;1889:11;;;1885:24;1881:29;1871:40;1917:1;1913:11;;;1868:57;3191:81;;2338:944;;2368:663;1162:1;1155:14;;;1199:4;1186:18;;-1:-1:-1;;2404:20:42;;;2522:236;2536:7;2533:1;2530:14;2522:236;;;2625:19;;;2619:26;2604:42;;2717:27;;;;2685:1;2673:14;;;;2552:19;;2522:236;;;2526:3;2786:6;2777:7;2774:19;2771:201;;;2847:19;;;2841:26;-1:-1:-1;;2930:1:42;2926:14;;;2942:3;2922:24;2918:37;2914:42;2899:58;2884:74;;2771:201;-1:-1:-1;;;;;3018:1:42;3002:14;;;2998:22;2985:36;;-1:-1:-1;1936:1352:42:o;:::-;261:1703:39;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "261:1703:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2261:21:17;:19;:21::i;:::-;690:12:39::1;705:19;:17;:19::i;:::-;690:34;;745:9;738:4;:16;734:57;;;756:8;::::0;-1:-1:-1;;;;;756:8:39::1;:35;774:16;786:4:::0;774:9:::1;:16;:::i;:::-;756:35;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;734:57;680:118;2303:20:17::0;1716:1;2809:7;:22;2629:209;2303:20;261:1703:39;;;;;2154:98:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;-1:-1:-1;4431:197:18;;;;;:::i;:::-;;:::i;:::-;;;1434:14:42;;1427:22;1409:41;;1397:2;1382:18;4431:197:18;1269:187:42;1842:120:39;;;;;;;;;;;;;:::i;:::-;;;1607:25:42;;;1595:2;1580:18;1842:120:39;1461:177:42;3242:106:18;;;;;;;;;;-1:-1:-1;3329:12:18;;3242:106;;5190:286;;;;;;;;;;-1:-1:-1;5190:286:18;;;;;:::i;:::-;;:::i;1001:181:39:-;;;;;;;;;;-1:-1:-1;1001:181:39;;;;;:::i;:::-;;:::i;3091:91:18:-;;;;;;;;;;-1:-1:-1;3091:91:18;;3173:2;2309:36:42;;2297:2;2282:18;3091:91:18;2167:184:42;5871:234:18;;;;;;;;;;-1:-1:-1;5871:234:18;;;;;:::i;:::-;;:::i;1188:254:39:-;;;;;;;;;;-1:-1:-1;1188:254:39;;;;;:::i;:::-;;:::i;804:191::-;;;;;;;;;;-1:-1:-1;804:191:39;;;;;:::i;:::-;;:::i;578:89:20:-;;;;;;;;;;-1:-1:-1;578:89:20;;;;;:::i;:::-;;:::i;321:31:39:-;;;;;;;;;;-1:-1:-1;321:31:39;;;;-1:-1:-1;;;;;321:31:39;;;;;;-1:-1:-1;;;;;2721:32:42;;;2703:51;;2691:2;2676:18;321:31:39;2541:219:42;1448:263:39;;;;;;;;;;;;;:::i;1717:119::-;;;;;;;;;;;;;:::i;3406:125:18:-;;;;;;;;;;-1:-1:-1;3406:125:18;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:18;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;358:33:39;;;;;;;;;;-1:-1:-1;358:33:39;;;;-1:-1:-1;;;;;358:33:39;;;973:161:20;;;;;;;;;;-1:-1:-1;973:161:20;;;;;:::i;:::-;;:::i;2365:102:18:-;;;;;;;;;;;;;:::i;6592:427::-;;;;;;;;;;-1:-1:-1;6592:427:18;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:18;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;;;;;-1:-1:-1;3974:149:18;;;;;:::i;:::-;;:::i;2336:287:17:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:17;;3440:2:42;2460:63:17;;;3422:21:42;3479:2;3459:18;;;3452:30;3518:33;3498:18;;;3491:61;3569:18;;2460:63:17;;;;;;;;;1759:1;2598:7;:18;2336:287::o;1842:120:39:-;1892:7;1934:21;1918:13;3329:12:18;;;3242:106;1918:13:39;:37;;;;:::i;:::-;1911:44;;1842:120;:::o;2154:98:18:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:25;4568:32:18;719:10:25;4584:7:18;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:25;5373:38:18;5389:4;719:10:25;5404:6:18;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:18;;5190:286;-1:-1:-1;;;;5190:286:18:o;1001:181:39:-;-1:-1:-1;;;;;3506:18:18;;1060:11:39;3506:18:18;;;:9;:18;;;;;;1090:21:39;:41;:85;;1154:21;1090:85;;;-1:-1:-1;;;;;3506:18:18;;3480:7;3506:18;;;:9;:18;;;;;;1134:17:39;3406:125:18;5871:234;5959:4;719:10:25;6013:64:18;719:10:25;6029:7:18;6066:10;6038:25;719:10:25;6029:7:18;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1188:254:39:-;2261:21:17;:19;:21::i;:::-;719:10:25;1325:6:39;1301:20:::1;719:10:25::0;1301:12:39::1;:20::i;:::-;:30;;1293:69;;;::::0;-1:-1:-1;;;1293:69:39;;4315:2:42;1293:69:39::1;::::0;::::1;4297:21:42::0;4354:2;4334:18;;;4327:30;4393:28;4373:18;;;4366:56;4439:18;;1293:69:39::1;4113:350:42::0;1293:69:39::1;1372:21;1378:6;1386;1372:5;:21::i;:::-;1403:32;::::0;-1:-1:-1;;;;;1403:24:39;::::1;::::0;:32;::::1;;;::::0;1428:6;;1403:32:::1;::::0;;;1428:6;1403:24;:32;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1244:198;2303:20:17::0;1716:1;2809:7;:22;2629:209;2303:20;1188:254:39;:::o;804:191::-;894:18;;-1:-1:-1;;;;;894:18:39;719:10:25;-1:-1:-1;;;;;878:34:39;;870:86;;;;-1:-1:-1;;;870:86:39;;4670:2:42;870:86:39;;;4652:21:42;4709:2;4689:18;;;4682:30;4748:34;4728:18;;;4721:62;-1:-1:-1;;;4799:18:42;;;4792:37;4846:19;;870:86:39;4468:403:42;870:86:39;966:22;972:7;981:6;966:5;:22::i;:::-;804:191;;:::o;578:89:20:-;633:27;719:10:25;653:6:20;633:5;:27::i;1448:263:39:-;2261:21:17;:19;:21::i;:::-;719:10:25;1503:14:39::1;1561:20;719:10:25::0;1561:12:39::1;:20::i;:::-;1542:39;;1610:1;1599:8;:12;1591:36;;;::::0;-1:-1:-1;;;1591:36:39;;5078:2:42;1591:36:39::1;::::0;::::1;5060:21:42::0;5117:2;5097:18;;;5090:30;-1:-1:-1;;;5136:18:42;;;5129:41;5187:18;;1591:36:39::1;4876:335:42::0;1591:36:39::1;1637:23;1643:6;1651:8;1637:5;:23::i;:::-;1670:34;::::0;-1:-1:-1;;;;;1670:24:39;::::1;::::0;:34;::::1;;;::::0;1695:8;;1670:34:::1;::::0;;;1695:8;1670:24;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1493:218;;2303:20:17::0;1716:1;2809:7;:22;2629:209;2303:20;1448:263:39:o;1717:119::-;1769:4;1816:13;3329:12:18;;;3242:106;1816:13:39;1792:21;:37;1785:44;;1717:119;:::o;973:161:20:-;1049:46;1065:7;719:10:25;1088:6:20;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2365:102:18:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:25;6685:4:18;6766:25;719:10:25;6783:7:18;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:18;;5418:2:42;6801:85:18;;;5400:21:42;5457:2;5437:18;;;5430:30;5496:34;5476:18;;;5469:62;-1:-1:-1;;;5547:18:42;;;5540:35;5592:19;;6801:85:18;5216:401:42;6801:85:18;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:25;3860:28:18;719:10:25;3877:2:18;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:18;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:18;;10627:68;;;;-1:-1:-1;;;10627:68:18;;5824:2:42;10627:68:18;;;5806:21:42;5863:2;5843:18;;;5836:30;5902:34;5882:18;;;5875:62;-1:-1:-1;;;5953:18:42;;;5946:34;5997:19;;10627:68:18;5622:400:42;10627:68:18;-1:-1:-1;;;;;10713:21:18;;10705:68;;;;-1:-1:-1;;;10705:68:18;;6229:2:42;10705:68:18;;;6211:21:42;6268:2;6248:18;;;6241:30;6307:34;6287:18;;;6280:62;-1:-1:-1;;;6358:18:42;;;6351:32;6400:19;;10705:68:18;6027:398:42;10705:68:18;-1:-1:-1;;;;;10784:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1607:25:42;;;10835:32:18;;1580:18:42;10835:32:18;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:18;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:18;;6632:2:42;11404:68:18;;;6614:21:42;6671:2;6651:18;;;6644:30;6710:31;6690:18;;;6683:59;6759:18;;11404:68:18;6430:353:42;11404:68:18;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:18;;7591:68;;;;-1:-1:-1;;;7591:68:18;;6990:2:42;7591:68:18;;;6972:21:42;7029:2;7009:18;;;7002:30;7068:34;7048:18;;;7041:62;-1:-1:-1;;;7119:18:42;;;7112:35;7164:19;;7591:68:18;6788:401:42;7591:68:18;-1:-1:-1;;;;;7677:16:18;;7669:64;;;;-1:-1:-1;;;7669:64:18;;7396:2:42;7669:64:18;;;7378:21:42;7435:2;7415:18;;;7408:30;7474:34;7454:18;;;7447:62;-1:-1:-1;;;7525:18:42;;;7518:33;7568:19;;7669:64:18;7194:399:42;7669:64:18;-1:-1:-1;;;;;7815:15:18;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:18;;7800:2:42;7840:72:18;;;7782:21:42;7839:2;7819:18;;;7812:30;7878:34;7858:18;;;7851:62;-1:-1:-1;;;7929:18:42;;;7922:36;7975:19;;7840:72:18;7598:402:42;7840:72:18;-1:-1:-1;;;;;7946:15:18;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;;;;;7978:6;1607:25:42;;1595:2;1580:18;;1461:177;8210:26:18;;;;;;;;8247:37;9422:659;;-1:-1:-1;;;;;9505:21:18;;9497:67;;;;-1:-1:-1;;;9497:67:18;;8207:2:42;9497:67:18;;;8189:21:42;8246:2;8226:18;;;8219:30;8285:34;8265:18;;;8258:62;-1:-1:-1;;;8336:18:42;;;8329:31;8377:19;;9497:67:18;8005:397:42;9497:67:18;-1:-1:-1;;;;;9660:18:18;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:18;;8609:2:42;9688:71:18;;;8591:21:42;8648:2;8628:18;;;8621:30;8687:34;8667:18;;;8660:62;-1:-1:-1;;;8738:18:42;;;8731:32;8780:19;;9688:71:18;8407:398:42;9688:71:18;-1:-1:-1;;;;;9793:18:18;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1607:25:42;;;9793:18:18;;;9978:37;;1580:18:42;9978:37:18;1461:177:42;8567:535:18;-1:-1:-1;;;;;8650:21:18;;8642:65;;;;-1:-1:-1;;;8642:65:18;;9012:2:42;8642:65:18;;;8994:21:42;9051:2;9031:18;;;9024:30;9090:33;9070:18;;;9063:61;9141:18;;8642:65:18;8810:355:42;8642:65:18;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:18;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1607:25:42;;;8999:37:18;;1580:18:42;8999:37:18;;;;;;;804:191:39;;:::o;14:127:42:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:128;213:9;;;234:11;;;231:37;;;248:18;;:::i;279:548::-;391:4;420:2;449;438:9;431:21;481:6;475:13;524:6;519:2;508:9;504:18;497:34;549:1;559:140;573:6;570:1;567:13;559:140;;;668:14;;;664:23;;658:30;634:17;;;653:2;630:26;623:66;588:10;;559:140;;;563:3;748:1;743:2;734:6;723:9;719:22;715:31;708:42;818:2;811;807:7;802:2;794:6;790:15;786:29;775:9;771:45;767:54;759:62;;;;279:548;;;;:::o;832:173::-;900:20;;-1:-1:-1;;;;;949:31:42;;939:42;;929:70;;995:1;992;985:12;929:70;832:173;;;:::o;1010:254::-;1078:6;1086;1139:2;1127:9;1118:7;1114:23;1110:32;1107:52;;;1155:1;1152;1145:12;1107:52;1178:29;1197:9;1178:29;:::i;:::-;1168:39;1254:2;1239:18;;;;1226:32;;-1:-1:-1;;;1010:254:42:o;1643:328::-;1720:6;1728;1736;1789:2;1777:9;1768:7;1764:23;1760:32;1757:52;;;1805:1;1802;1795:12;1757:52;1828:29;1847:9;1828:29;:::i;:::-;1818:39;;1876:38;1910:2;1899:9;1895:18;1876:38;:::i;:::-;1866:48;;1961:2;1950:9;1946:18;1933:32;1923:42;;1643:328;;;;;:::o;1976:186::-;2035:6;2088:2;2076:9;2067:7;2063:23;2059:32;2056:52;;;2104:1;2101;2094:12;2056:52;2127:29;2146:9;2127:29;:::i;:::-;2117:39;1976:186;-1:-1:-1;;;1976:186:42:o;2356:180::-;2415:6;2468:2;2456:9;2447:7;2443:23;2439:32;2436:52;;;2484:1;2481;2474:12;2436:52;-1:-1:-1;2507:23:42;;2356:180;-1:-1:-1;2356:180:42:o;2973:260::-;3041:6;3049;3102:2;3090:9;3081:7;3077:23;3073:32;3070:52;;;3118:1;3115;3108:12;3070:52;3141:29;3160:9;3141:29;:::i;:::-;3131:39;;3189:38;3223:2;3212:9;3208:18;3189:38;:::i;:::-;3179:48;;2973:260;;;;;:::o;3598:380::-;3677:1;3673:12;;;;3720;;;3741:61;;3795:4;3787:6;3783:17;3773:27;;3741:61;3848:2;3840:6;3837:14;3817:18;3814:38;3811:161;;3894:10;3889:3;3885:20;3882:1;3875:31;3929:4;3926:1;3919:15;3957:4;3954:1;3947:15;3811:161;;3598:380;;;:::o;3983:125::-;4048:9;;;4069:10;;;4066:36;;;4082:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "backingDifference()": "0f9d07e4",
    "balanceOf(address)": "70a08231",
    "blockLeaksContract()": "7872be30",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "claimDai(uint256)": "3f4564be",
    "claimMaxDai()": "4f38a403",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "isVaultFullfilled()": "6fe02e6c",
    "maxClaimable(address)": "25f3df5b",
    "mint(address,uint256)": "40c10f19",
    "multisig()": "4783c35b",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"multisig_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"blockLeaksContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"backingDifference\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockLeaksContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimMaxDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVaultFullfilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"maxClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisig\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LeaksToken.sol\":\"LeaksToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/\",\":@sismo-core/hydra-s2/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hydra-s2-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/\",\":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\",\":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol\":{\"keccak256\":\"0xa76e685b90c0ec1748bfc7568f3234ed5f0e1f053501a47124956fee129bbc5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efed9af69af3422d916a8c95e9ed405992c3142a92e9a3cb4e607d333cc32d5a\",\"dweb:/ipfs/Qme7FfoLLNHWT5cL7iDXaEUFmnsXRMwRXjtoq4LF9hkNtZ\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol\":{\"keccak256\":\"0x5b1f1b220b6a879e4794f6ab54e90b79d84448b6ae282c3b2b249b42a941c575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b989b364009f88a2ddb758ebaaadf893fe79f4df7959fcebd0abda8d95ffdfe\",\"dweb:/ipfs/QmSbwQQHVEKZuT25uiRVWs9WtEC8We6xthoKQHpvmuwPAp\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol\":{\"keccak256\":\"0x9b4fdfd005815eeb1005dd5fda5965c468dd01cdb1776ca343fb6229d199096a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9d5e050d3f3ea434dac6ba9f669c1ba12270ce5c8ef42a8bb4230ad69d36c1b\",\"dweb:/ipfs/QmNmY22T8dxryQ6fPdEodcqBhTXdTh51zV9wUzUPpeJH5N\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol\":{\"keccak256\":\"0x0057d68d58ac241cb3a58b849d7431091343423b1ec335caa4d28f5776d78ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e982d28a1755b8fdd48423a3eac9ed69f2f5bb603ef2a09cbab6766e41b24442\",\"dweb:/ipfs/QmNVdS4BtpNJMxYRNqDB6JreaW5uQaBEyTR4BDkL7DVNdz\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol\":{\"keccak256\":\"0xa8ebab473db1186a9118d5c6d498fac44d3dd05cfe3a2443cfdf4041236c7ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f731db479a72e6d7eda58736cf95e6d5da7dc3990714bd01a70252d0f30003a5\",\"dweb:/ipfs/QmawaTFTdz8RPGpQGj1DUijMUviTdstiLMv84Vn9YRCAC6\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol\":{\"keccak256\":\"0x7d7935ef054b8ef2e6a99e1b7e6aa8bab55e4ba7cc55fc74aa2f206d66c56ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67a928e18192e1b98bd81ba3f6eb8cc931d5b77462e62ca038fbe2bfa11df8b2\",\"dweb:/ipfs/QmUQFKhHBeNURhdXWfw6M1C1PiFX1eLmCzGnKu7Nur6S5a\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol\":{\"keccak256\":\"0x703ca2c53b3e05ef34a5f1f5b8575267ab20dd20378178403f21ae1d832ba7a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de19c6cc0c4d84f070186f6e66eef5ac576bf71aa238966e3968b7d91c4ed679\",\"dweb:/ipfs/QmWy2hjkPu7QXvDgeHdA23EroyMfw8E773VmxNbeQ19aVw\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol\":{\"keccak256\":\"0x666f7e6c78eb9478790ff290780f11374db0333a9f88914592b25386e924cda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bb56d30e78ccb9d121a9f1023244ea2af0877fc9503a3b8db068a50730031fb\",\"dweb:/ipfs/QmdzfGvxMxf2CCTr5vqV1YP4VvchhczcT1VNeZzqQHKJTP\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092\",\"dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS2Verifier.sol\":{\"keccak256\":\"0x184f4691fc2b0a8dc77c74e9ebda5be9029b4e6f3aee396b95fa7b41b93d90d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf6deaaa08759d94fb33dd614d8610cec1c13f1b6cf61a46e22e02aace20d1a\",\"dweb:/ipfs/QmU32LptYUkidVdZNMhnGdvrJxg62c1MG1zWAWQzERJQMG\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol\":{\"keccak256\":\"0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134\",\"dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu\"]},\"src/LeaksToken.sol\":{\"keccak256\":\"0x98a6603b8b9a6ed3c4586f72cf4e22015937d309c6aed0235f83267cd606cc9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39f907fec348c79afc906b59a2baf94b97780307cbc54862ac2e83a2d130b261\",\"dweb:/ipfs/QmRMqNdm4f6iZvpxVbgKvf1bpbTJVy8EkAwixd6PmmQ7DM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "multisig_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "blockLeaksContract_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "backingDifference",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blockLeaksContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimDai"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimMaxDai"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultFullfilled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "maxClaimable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "multisig",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/",
        ":@sismo-core/hydra-s2/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":hydra-s2-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/",
        ":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/",
        ":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/LeaksToken.sol": "LeaksToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol": {
        "keccak256": "0xa76e685b90c0ec1748bfc7568f3234ed5f0e1f053501a47124956fee129bbc5d",
        "urls": [
          "bzz-raw://efed9af69af3422d916a8c95e9ed405992c3142a92e9a3cb4e607d333cc32d5a",
          "dweb:/ipfs/Qme7FfoLLNHWT5cL7iDXaEUFmnsXRMwRXjtoq4LF9hkNtZ"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol": {
        "keccak256": "0x5b1f1b220b6a879e4794f6ab54e90b79d84448b6ae282c3b2b249b42a941c575",
        "urls": [
          "bzz-raw://1b989b364009f88a2ddb758ebaaadf893fe79f4df7959fcebd0abda8d95ffdfe",
          "dweb:/ipfs/QmSbwQQHVEKZuT25uiRVWs9WtEC8We6xthoKQHpvmuwPAp"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol": {
        "keccak256": "0x9b4fdfd005815eeb1005dd5fda5965c468dd01cdb1776ca343fb6229d199096a",
        "urls": [
          "bzz-raw://c9d5e050d3f3ea434dac6ba9f669c1ba12270ce5c8ef42a8bb4230ad69d36c1b",
          "dweb:/ipfs/QmNmY22T8dxryQ6fPdEodcqBhTXdTh51zV9wUzUPpeJH5N"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol": {
        "keccak256": "0x0057d68d58ac241cb3a58b849d7431091343423b1ec335caa4d28f5776d78ec6",
        "urls": [
          "bzz-raw://e982d28a1755b8fdd48423a3eac9ed69f2f5bb603ef2a09cbab6766e41b24442",
          "dweb:/ipfs/QmNVdS4BtpNJMxYRNqDB6JreaW5uQaBEyTR4BDkL7DVNdz"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol": {
        "keccak256": "0xa8ebab473db1186a9118d5c6d498fac44d3dd05cfe3a2443cfdf4041236c7ac1",
        "urls": [
          "bzz-raw://f731db479a72e6d7eda58736cf95e6d5da7dc3990714bd01a70252d0f30003a5",
          "dweb:/ipfs/QmawaTFTdz8RPGpQGj1DUijMUviTdstiLMv84Vn9YRCAC6"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol": {
        "keccak256": "0x7d7935ef054b8ef2e6a99e1b7e6aa8bab55e4ba7cc55fc74aa2f206d66c56ee6",
        "urls": [
          "bzz-raw://67a928e18192e1b98bd81ba3f6eb8cc931d5b77462e62ca038fbe2bfa11df8b2",
          "dweb:/ipfs/QmUQFKhHBeNURhdXWfw6M1C1PiFX1eLmCzGnKu7Nur6S5a"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol": {
        "keccak256": "0x703ca2c53b3e05ef34a5f1f5b8575267ab20dd20378178403f21ae1d832ba7a7",
        "urls": [
          "bzz-raw://de19c6cc0c4d84f070186f6e66eef5ac576bf71aa238966e3968b7d91c4ed679",
          "dweb:/ipfs/QmWy2hjkPu7QXvDgeHdA23EroyMfw8E773VmxNbeQ19aVw"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol": {
        "keccak256": "0x666f7e6c78eb9478790ff290780f11374db0333a9f88914592b25386e924cda3",
        "urls": [
          "bzz-raw://9bb56d30e78ccb9d121a9f1023244ea2af0877fc9503a3b8db068a50730031fb",
          "dweb:/ipfs/QmdzfGvxMxf2CCTr5vqV1YP4VvchhczcT1VNeZzqQHKJTP"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol": {
        "keccak256": "0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e",
        "urls": [
          "bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092",
          "dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS2Verifier.sol": {
        "keccak256": "0x184f4691fc2b0a8dc77c74e9ebda5be9029b4e6f3aee396b95fa7b41b93d90d3",
        "urls": [
          "bzz-raw://ddf6deaaa08759d94fb33dd614d8610cec1c13f1b6cf61a46e22e02aace20d1a",
          "dweb:/ipfs/QmU32LptYUkidVdZNMhnGdvrJxg62c1MG1zWAWQzERJQMG"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol": {
        "keccak256": "0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0",
        "urls": [
          "bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134",
          "dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu"
        ],
        "license": "MIT"
      },
      "src/LeaksToken.sol": {
        "keccak256": "0x98a6603b8b9a6ed3c4586f72cf4e22015937d309c6aed0235f83267cd606cc9e",
        "urls": [
          "bzz-raw://39f907fec348c79afc906b59a2baf94b97780307cbc54862ac2e83a2d130b261",
          "dweb:/ipfs/QmRMqNdm4f6iZvpxVbgKvf1bpbTJVy8EkAwixd6PmmQ7DM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/LeaksToken.sol",
    "id": 37558,
    "exportedSymbols": {
      "Auth": [
        36086
      ],
      "AuthRequest": [
        36040
      ],
      "AuthRequestBuilder": [
        34002
      ],
      "AuthType": [
        36068
      ],
      "Claim": [
        36100
      ],
      "ClaimRequest": [
        36056
      ],
      "ClaimRequestBuilder": [
        34649
      ],
      "ClaimType": [
        36074
      ],
      "Context": [
        30573
      ],
      "ERC20": [
        29757
      ],
      "ERC20Burnable": [
        29879
      ],
      "IAddressesProvider": [
        36248
      ],
      "IERC20": [
        29835
      ],
      "IERC20Metadata": [
        29904
      ],
      "IHydraS2Verifier": [
        36321
      ],
      "ISismoConnectVerifier": [
        31237
      ],
      "LeaksToken": [
        37557
      ],
      "ReentrancyGuard": [
        29170
      ],
      "RequestBuilder": [
        35755
      ],
      "Signature": [
        36105
      ],
      "SignatureBuilder": [
        35881
      ],
      "SignatureRequest": [
        36063
      ],
      "SismoConnect": [
        33544
      ],
      "SismoConnectHelper": [
        36008
      ],
      "SismoConnectRequest": [
        36026
      ],
      "SismoConnectResponse": [
        36118
      ],
      "SismoConnectVerifiedResult": [
        36150
      ],
      "VerifiedAuth": [
        36162
      ],
      "VerifiedClaim": [
        36178
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1933:39",
    "nodes": [
      {
        "id": 37346,
        "nodeType": "PragmaDirective",
        "src": "32:24:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 37347,
        "nodeType": "ImportDirective",
        "src": "58:83:39",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37558,
        "sourceUnit": 29880,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37348,
        "nodeType": "ImportDirective",
        "src": "142:71:39",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37558,
        "sourceUnit": 29171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37349,
        "nodeType": "ImportDirective",
        "src": "214:45:39",
        "nodes": [],
        "absolutePath": "lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol",
        "file": "sismo-connect-solidity/SismoLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37558,
        "sourceUnit": 36325,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37557,
        "nodeType": "ContractDefinition",
        "src": "261:1703:39",
        "nodes": [
          {
            "id": 37355,
            "nodeType": "VariableDeclaration",
            "src": "321:31:39",
            "nodes": [],
            "constant": false,
            "functionSelector": "4783c35b",
            "mutability": "mutable",
            "name": "multisig",
            "nameLocation": "344:8:39",
            "scope": 37557,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 37354,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:15:39",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37357,
            "nodeType": "VariableDeclaration",
            "src": "358:33:39",
            "nodes": [],
            "constant": false,
            "functionSelector": "7872be30",
            "mutability": "mutable",
            "name": "blockLeaksContract",
            "nameLocation": "373:18:39",
            "scope": 37557,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37361,
            "nodeType": "VariableDeclaration",
            "src": "398:39:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contributed",
            "nameLocation": "426:11:39",
            "scope": 37557,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 37360,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 37358,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "398:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 37359,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "417:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 37381,
            "nodeType": "FunctionDefinition",
            "src": "444:190:39",
            "nodes": [],
            "body": {
              "id": 37380,
              "nodeType": "Block",
              "src": "547:87:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37372,
                      "name": "multisig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37355,
                      "src": "557:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37373,
                      "name": "multisig_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37363,
                      "src": "568:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "557:20:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 37375,
                  "nodeType": "ExpressionStatement",
                  "src": "557:20:39"
                },
                {
                  "expression": {
                    "id": 37378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37376,
                      "name": "blockLeaksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37357,
                      "src": "587:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37377,
                      "name": "blockLeaksContract_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37365,
                      "src": "608:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "587:40:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37379,
                  "nodeType": "ExpressionStatement",
                  "src": "587:40:39"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "426c6f636b4c65616b7320546f6b656e",
                    "id": 37368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "518:18:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_dce1bdeacc993b2ac5161e93f5f11129b9c585946ff748d4827bc46f5004725a",
                      "typeString": "literal_string \"BlockLeaks Token\""
                    },
                    "value": "BlockLeaks Token"
                  },
                  {
                    "hexValue": "4c45414b53",
                    "id": 37369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "538:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a83d4f3b01394622e24a3f879ef133ec062ac173bcf9e426d4c402994bad508",
                      "typeString": "literal_string \"LEAKS\""
                    },
                    "value": "LEAKS"
                  }
                ],
                "id": 37370,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37367,
                  "name": "ERC20",
                  "nameLocations": [
                    "512:5:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29757,
                  "src": "512:5:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:34:39"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37363,
                  "mutability": "mutable",
                  "name": "multisig_",
                  "nameLocation": "472:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37381,
                  "src": "456:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 37362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:15:39",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37365,
                  "mutability": "mutable",
                  "name": "blockLeaksContract_",
                  "nameLocation": "491:19:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37381,
                  "src": "483:27:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:56:39"
            },
            "returnParameters": {
              "id": 37371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "547:0:39"
            },
            "scope": 37557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37406,
            "nodeType": "FunctionDefinition",
            "src": "640:158:39",
            "nodes": [],
            "body": {
              "id": 37405,
              "nodeType": "Block",
              "src": "680:118:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37387,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "698:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 37405,
                      "src": "690:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "690:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37390,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37388,
                      "name": "backingDifference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37556,
                      "src": "705:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 37389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:19:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "690:34:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37391,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37387,
                      "src": "738:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 37392,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "745:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "749:5:39",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "745:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "738:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37404,
                  "nodeType": "IfStatement",
                  "src": "734:57:39",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 37398,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "774:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "778:5:39",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "774:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 37400,
                            "name": "diff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37387,
                            "src": "786:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "774:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 37395,
                          "name": "multisig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37355,
                          "src": "756:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 37397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "765:8:39",
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "756:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 37402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:35:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 37403,
                    "nodeType": "ExpressionStatement",
                    "src": "756:35:39"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 37384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37383,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "667:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29146,
                  "src": "667:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "667:12:39"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:39"
            },
            "returnParameters": {
              "id": 37385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:39"
            },
            "scope": 37557,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37427,
            "nodeType": "FunctionDefinition",
            "src": "804:191:39",
            "nodes": [],
            "body": {
              "id": 37426,
              "nodeType": "Block",
              "src": "860:135:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 37414,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30563,
                            "src": "878:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 37415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "878:12:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37416,
                          "name": "blockLeaksContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37357,
                          "src": "894:18:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "878:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920426c6f636b4c65616b7320436f6e74726163742063616e206d696e7420746f6b656e",
                        "id": 37418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "914:41:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70159bfd5ec47a23ceac09274d1147a8a568ad36f5b62d9df2526acd2845e4dd",
                          "typeString": "literal_string \"Only BlockLeaks Contract can mint token\""
                        },
                        "value": "Only BlockLeaks Contract can mint token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70159bfd5ec47a23ceac09274d1147a8a568ad36f5b62d9df2526acd2845e4dd",
                          "typeString": "literal_string \"Only BlockLeaks Contract can mint token\""
                        }
                      ],
                      "id": 37413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "870:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:86:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37420,
                  "nodeType": "ExpressionStatement",
                  "src": "870:86:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37422,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37408,
                        "src": "972:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37423,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37410,
                        "src": "981:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37421,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29574,
                      "src": "966:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "966:22:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37425,
                  "nodeType": "ExpressionStatement",
                  "src": "966:22:39"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "813:4:39",
            "parameters": {
              "id": 37411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37408,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "826:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37427,
                  "src": "818:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37410,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "843:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37427,
                  "src": "835:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "817:33:39"
            },
            "returnParameters": {
              "id": 37412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:0:39"
            },
            "scope": 37557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37454,
            "nodeType": "FunctionDefinition",
            "src": "1001:181:39",
            "nodes": [],
            "body": {
              "id": 37453,
              "nodeType": "Block",
              "src": "1073:109:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37436,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1098:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LeaksToken_$37557",
                                "typeString": "contract LeaksToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LeaksToken_$37557",
                                "typeString": "contract LeaksToken"
                              }
                            ],
                            "id": 37435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1090:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1090:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1090:13:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 37438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1104:7:39",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1090:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 37440,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37429,
                            "src": "1124:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37439,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29269,
                          "src": "1114:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 37441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1114:17:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1090:41:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 37448,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1162:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          ],
                          "id": 37447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1154:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1154:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1154:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 37450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1168:7:39",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1154:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1090:85:39",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 37444,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37429,
                          "src": "1144:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37443,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29269,
                        "src": "1134:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 37445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1134:17:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37433,
                  "id": 37452,
                  "nodeType": "Return",
                  "src": "1083:92:39"
                }
              ]
            },
            "functionSelector": "25f3df5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxClaimable",
            "nameLocation": "1010:12:39",
            "parameters": {
              "id": 37430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37429,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1031:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37454,
                  "src": "1023:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:16:39"
            },
            "returnParameters": {
              "id": 37433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37432,
                  "mutability": "mutable",
                  "name": "max",
                  "nameLocation": "1068:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37454,
                  "src": "1060:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1059:13:39"
            },
            "scope": 37557,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37489,
            "nodeType": "FunctionDefinition",
            "src": "1188:254:39",
            "nodes": [],
            "body": {
              "id": 37488,
              "nodeType": "Block",
              "src": "1244:198:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37462,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1262:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 37488,
                      "src": "1254:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37461,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1254:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37465,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37463,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30563,
                      "src": "1271:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 37464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:12:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1254:29:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37468,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37462,
                              "src": "1314:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 37467,
                            "name": "maxClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37454,
                            "src": "1301:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 37469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1301:20:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 37470,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37456,
                          "src": "1325:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1301:30:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "20436c61696d206d6f7265207468616e2020706f737369626c65",
                        "id": 37472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1333:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_145c88e03a3eb35705e862d11d4b8f47fb484d9067a994c284d2477d7b38d30c",
                          "typeString": "literal_string \" Claim more than  possible\""
                        },
                        "value": " Claim more than  possible"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_145c88e03a3eb35705e862d11d4b8f47fb484d9067a994c284d2477d7b38d30c",
                          "typeString": "literal_string \" Claim more than  possible\""
                        }
                      ],
                      "id": 37466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1293:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:69:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37474,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:69:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37476,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37462,
                        "src": "1378:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37477,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37456,
                        "src": "1386:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37475,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29646,
                      "src": "1372:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:21:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37479,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:21:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37485,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37456,
                        "src": "1428:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37482,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37462,
                            "src": "1411:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1403:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 37480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1403:8:39",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:15:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 37484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1419:8:39",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1403:24:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:32:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37487,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:32:39"
                }
              ]
            },
            "functionSelector": "3f4564be",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37459,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37458,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1231:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29146,
                  "src": "1231:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1231:12:39"
              }
            ],
            "name": "claimDai",
            "nameLocation": "1197:8:39",
            "parameters": {
              "id": 37457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37456,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1214:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 37489,
                  "src": "1206:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:16:39"
            },
            "returnParameters": {
              "id": 37460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:0:39"
            },
            "scope": 37557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37526,
            "nodeType": "FunctionDefinition",
            "src": "1448:263:39",
            "nodes": [],
            "body": {
              "id": 37525,
              "nodeType": "Block",
              "src": "1493:218:39",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37495,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1511:6:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 37525,
                      "src": "1503:14:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37494,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1503:7:39",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37498,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37496,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30563,
                      "src": "1520:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 37497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:12:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:29:39"
                },
                {
                  "assignments": [
                    37500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37500,
                      "mutability": "mutable",
                      "name": "maxClaim",
                      "nameLocation": "1550:8:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 37525,
                      "src": "1542:16:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37499,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1542:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37504,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 37502,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37495,
                        "src": "1574:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37501,
                      "name": "maxClaimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37454,
                      "src": "1561:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 37503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:20:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1542:39:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37506,
                          "name": "maxClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37500,
                          "src": "1599:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1610:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1599:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d206572726f72",
                        "id": 37509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fecfdc7e6a93f00063e52f384b018941cd3e827d87c862f7f8c73263cbd2551",
                          "typeString": "literal_string \"Claim error\""
                        },
                        "value": "Claim error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fecfdc7e6a93f00063e52f384b018941cd3e827d87c862f7f8c73263cbd2551",
                          "typeString": "literal_string \"Claim error\""
                        }
                      ],
                      "id": 37505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1591:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37511,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:36:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37513,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37495,
                        "src": "1643:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37514,
                        "name": "maxClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37500,
                        "src": "1651:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37512,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29646,
                      "src": "1637:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:23:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37516,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:23:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37522,
                        "name": "maxClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37500,
                        "src": "1695:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 37519,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37495,
                            "src": "1678:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1670:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 37517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1670:8:39",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1670:15:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 37521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:8:39",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1670:24:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1670:34:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37524,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:34:39"
                }
              ]
            },
            "functionSelector": "4f38a403",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37491,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1480:12:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29146,
                  "src": "1480:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1480:12:39"
              }
            ],
            "name": "claimMaxDai",
            "nameLocation": "1457:11:39",
            "parameters": {
              "id": 37490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1468:2:39"
            },
            "returnParameters": {
              "id": 37493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1493:0:39"
            },
            "scope": 37557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37541,
            "nodeType": "FunctionDefinition",
            "src": "1717:119:39",
            "nodes": [],
            "body": {
              "id": 37540,
              "nodeType": "Block",
              "src": "1775:61:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 37533,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1800:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          ],
                          "id": 37532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1792:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37531,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1792:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1792:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 37535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1806:7:39",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1792:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37536,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29255,
                        "src": "1816:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 37537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1816:13:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1792:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 37530,
                  "id": 37539,
                  "nodeType": "Return",
                  "src": "1785:44:39"
                }
              ]
            },
            "functionSelector": "6fe02e6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultFullfilled",
            "nameLocation": "1726:17:39",
            "parameters": {
              "id": 37527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:2:39"
            },
            "returnParameters": {
              "id": 37530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37529,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37541,
                  "src": "1769:4:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37528,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:6:39"
            },
            "scope": 37557,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37556,
            "nodeType": "FunctionDefinition",
            "src": "1842:120:39",
            "nodes": [],
            "body": {
              "id": 37555,
              "nodeType": "Block",
              "src": "1901:61:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37546,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29255,
                        "src": "1918:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 37547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1918:13:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 37550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1942:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LeaksToken_$37557",
                              "typeString": "contract LeaksToken"
                            }
                          ],
                          "id": 37549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1934:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 37548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1934:7:39",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 37551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1934:13:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 37552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1948:7:39",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1934:21:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1918:37:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37545,
                  "id": 37554,
                  "nodeType": "Return",
                  "src": "1911:44:39"
                }
              ]
            },
            "functionSelector": "0f9d07e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "backingDifference",
            "nameLocation": "1851:17:39",
            "parameters": {
              "id": 37542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:2:39"
            },
            "returnParameters": {
              "id": 37545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37556,
                  "src": "1892:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:9:39"
            },
            "scope": 37557,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37350,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "284:15:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29170,
              "src": "284:15:39"
            },
            "id": 37351,
            "nodeType": "InheritanceSpecifier",
            "src": "284:15:39"
          },
          {
            "baseName": {
              "id": 37352,
              "name": "ERC20Burnable",
              "nameLocations": [
                "301:13:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29879,
              "src": "301:13:39"
            },
            "id": 37353,
            "nodeType": "InheritanceSpecifier",
            "src": "301:13:39"
          }
        ],
        "canonicalName": "LeaksToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37557,
          29879,
          29757,
          29904,
          29835,
          30573,
          29170
        ],
        "name": "LeaksToken",
        "nameLocation": "270:10:39",
        "scope": 37558,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 39
}