{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddingLeak",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCancelLeak",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEvaluateLeak",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFakeLeak",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testLeakVerified",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetup",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260008054600160ff19918216811790925560048054909116821790556001625e79b760e01b0319909152608452737109709ecfa91a80626ff3989d68f67f5b1dd12d63ffa1864960a4602060405180830381865afa1580156200006d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000093919062000302565b601b80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012d919062000302565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040516001625e79b760e01b0319815260036004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620001a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c7919062000302565b601d80546001600160a01b0319166001600160a01b03928316179055601b54604051911690620001f790620002f4565b6001600160a01b039091168152602001604051809103906000f08015801562000224573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526009815268151a5d1b1955195cdd60ba1b6020820152601f90620002749082620003d9565b506040518060400160405280600b81526020016a10dbdb9d195b9d15195cdd60aa1b81525060209081620002a99190620003d9565b5060408051808201909152600f81526e697066733a2f2f546573744c696e6b60881b6020820152602190620002df9082620003d9565b50348015620002ed57600080fd5b50620004a5565b6137cf806200271483390190565b6000602082840312156200031557600080fd5b81516001600160a01b03811681146200032d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200035f57607f821691505b6020821081036200038057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003d457600081815260208120601f850160051c81016020861015620003af5750805b601f850160051c820191505b81811015620003d057828155600101620003bb565b5050505b505050565b81516001600160401b03811115620003f557620003f562000334565b6200040d816200040684546200034a565b8462000386565b602080601f8311600181146200044557600084156200042c5750858301515b600019600386901b1c1916600185901b178555620003d0565b600085815260208120601f198616915b82811015620004765788860151825594840194600190910190840162000455565b5085821015620004955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61225f80620004b56000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063916a17c6116100a2578063ba414fa611610071578063ba414fa6146101a2578063bca86986146101ba578063bd23c4bb146101c2578063e20c9f71146101ca578063fa7626d4146101d257600080fd5b8063916a17c6146101825780639892fbc61461018a578063b54195a214610192578063b5508aa91461019a57600080fd5b80633f7286f4116100de5780633f7286f41461014857806366d9a9a01461015057806385226c8114610165578063867f93501461017a57600080fd5b80630a9254e4146101105780631ed7831c1461011a5780632cf15649146101385780633e5e3c2314610140575b600080fd5b6101186101df565b005b610122610260565b60405161012f9190611a5c565b60405180910390f35b6101186102c2565b610122610619565b610122610679565b6101586106d9565b60405161012f9190611aa9565b61016d6107c8565b60405161012f9190611b80565b610118610898565b610158610b5f565b610118610c45565b610118611009565b61016d61142c565b6101aa6114fc565b604051901515815260200161012f565b610118611627565b6101186117ac565b6101226119fc565b6000546101aa9060ff1681565b601c5460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161029a575b5050505050905090565b6102ca6117ac565b60408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050601e54601c546040516369a48c5960e01b81526001600160a01b03918216600482015292935016906369a48c5990602401600060405180830381865afa15801561035b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103839190810190611c6b565b60008151811061039557610395611d11565b6020026020010151816000815181106103b0576103b0611d11565b6020026020010181815250506014826000815181106103d1576103d1611d11565b63ffffffff9290921660209283029190910190910152601b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b5050601e5460405163dc590b0160e01b81526001600160a01b03909116925063dc590b01915061048a9085908590600401611d27565b600060405180830381600087803b1580156104a457600080fd5b505af11580156104b8573d6000803e3d6000fd5b5050601e548351600093506001600160a01b039091169150639a61416e90849084906104e6576104e6611d11565b60200260200101516040518263ffffffff1660e01b815260040161050c91815260200190565b600060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105519190810190611ea0565b9050806040015163ffffffff166014146105b25760405162461bcd60e51b815260206004820152601a60248201527f437269746963616c526174696f206e6f742077656c6c2073657400000000000060448201526064015b60405180910390fd5b6001815160038111156105c7576105c7611ff5565b146106145760405162461bcd60e51b815260206004820152601860248201527f4c65616b20737461747573206e6f742077656c6c20736574000000000000000060448201526064016105a9565b505050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156107bf5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107695790505b505050505081525050815260200190600101906106fd565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156107bf57838290600052602060002001805461080b9061200b565b80601f01602080910402602001604051908101604052809291908181526020018280546108379061200b565b80156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b5050505050815260200190600101906107ec565b6108a06117ac565b601c54601e546040516369a48c5960e01b81526001600160a01b0392831660048201819052319260009216906369a48c5990602401600060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091a9190810190611c6b565b60008151811061092c5761092c611d11565b6020908102919091010151601c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b5050601e54601c546040516320f4591b60e01b81526f3c0e4da0cf926dfbf5e31aa66f77199b60801b6004820152602481018690526001600160a01b039182166044820152911692506320f4591b9150606401600060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b5050601c54601e5460408051633dbcc8d160e01b815290516001600160a01b03938416319550929091169250633dbcc8d19160048083019260209291908290030181865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190612045565b15610aff5760405162461bcd60e51b815260206004820152602760248201527f43616e63656c204c65616b206e6f7420636f756e74656420696e206d6573736160448201526619d950dbdd5b9d60ca1b60648201526084016105a9565b610b09838261205e565b670de0b6b3a7640000146106145760405162461bcd60e51b815260206004820152601960248201527f5374616b6520616d6f756e74206e6f742072657475726e65640000000000000060448201526064016105a9565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156107bf5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c2d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bef5790505b50505050508152505081526020019060010190610b83565b610c4d6102c2565b601c54601b546040516303223eab60e11b81526001600160a01b03918216600482015291163190737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015610cad57600080fd5b505af1158015610cc1573d6000803e3d6000fd5b5050601e54601c546040516369a48c5960e01b81526001600160a01b0391821660048201529116925063cbdecc3c915082906369a48c5990602401600060405180830381865afa158015610d19573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d419190810190611c6b565b600081518110610d5357610d53611d11565b60200260200101516040518263ffffffff1660e01b8152600401610d7991815260200190565b600060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b5050601c546001600160a01b0316319150610dc49050828261205e565b670de0b6b3a764000014610e125760405162461bcd60e51b81526020600482015260156024820152742bb4ba34323930bbb7103b30b63ab29032b93937b960591b60448201526064016105a9565b601e54601c546040516301ac0c4560e51b81526001600160a01b03918216600482015291169063358188a090602401602060405180830381865afa158015610e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e829190612045565b670de0b6b3a764000014610ed35760405162461bcd60e51b815260206004820152601860248201527710dc99591a5d081b9bdd19481b9bdd081dd95b1b081cd95d60421b60448201526064016105a9565b601e54601c5460405163534a846560e01b81526001600160a01b03918216600482015291169063534a846590602401602060405180830381865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190612085565b60070b601414610f8f5760405162461bcd60e51b8152602060048201526017602482015276151c9d5cdd14d8dbdc99481b9bdd081dd95b1b081cd95d604a1b60448201526064016105a9565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610fed57600080fd5b505af1158015611001573d6000803e3d6000fd5b505050505050565b6110116102c2565b601c54601b546040516303223eab60e11b81526001600160a01b0391821660048201819052919092163191903190737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561107857600080fd5b505af115801561108c573d6000803e3d6000fd5b5050601e54601c546040516369a48c5960e01b81526001600160a01b039182166004820152911692506362e3cee7915082906369a48c5990602401600060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110c9190810190611c6b565b60008151811061111e5761111e611d11565b60200260200101516040518263ffffffff1660e01b815260040161114491815260200190565b600060405180830381600087803b15801561115e57600080fd5b505af1158015611172573d6000803e3d6000fd5b5050601c54601b546001600160a01b0391821631935016319050611196838261205e565b670de0b6b3a7640000146111ec5760405162461bcd60e51b815260206004820152601d60248201527f57697468647261776e2076616c7565206572726f7220746f206d73696700000060448201526064016105a9565b83821461123b5760405162461bcd60e51b815260206004820152601d60248201527f57697468647261776e2076616c7565206572726f7220746f206d73696700000060448201526064016105a9565b601e54601c546040516301ac0c4560e51b81526001600160a01b03918216600482015291169063358188a090602401602060405180830381865afa158015611287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ab9190612045565b156112f35760405162461bcd60e51b815260206004820152601860248201527710dc99591a5d081b9bdd19481b9bdd081dd95b1b081cd95d60421b60448201526064016105a9565b601e54601c5460405163534a846560e01b81526001600160a01b03918216600482015291169063534a846590602401602060405180830381865afa15801561133f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190612085565b60070b601319146113b05760405162461bcd60e51b8152602060048201526017602482015276151c9d5cdd14d8dbdc99481b9bdd081dd95b1b081cd95d604a1b60448201526064016105a9565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561140e57600080fd5b505af1158015611422573d6000803e3d6000fd5b5050505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156107bf57838290600052602060002001805461146f9061200b565b80601f016020809104026020016040519081016040528092919081815260200182805461149b9061200b565b80156114e85780601f106114bd576101008083540402835291602001916114e8565b820191906000526020600020905b8154815290600101906020018083116114cb57829003601f168201915b505050505081526020019060010190611450565b60008054610100900460ff161561151c5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156116225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916115aa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016120a7565b60408051601f19818403018152908290526115c4916120d8565b6000604051808303816000865af19150503d8060008114611601576040519150601f19603f3d011682016040523d82523d6000602084013e611606565b606091505b509150508080602001905181019061161e91906120f4565b9150505b919050565b601e5460408051633dbcc8d160e01b815290516000926001600160a01b031691633dbcc8d19160048083019260209291908290030181865afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116959190612045565b905080156116de5760405162461bcd60e51b81526020600482015260166024820152750813595cdcd859d9481b9bdd081a5b9a5d1a585d195960521b60448201526064016105a9565b601e546040805163c187bbc160e01b815290516f3c0e4da0cf926dfbf5e31aa66f77199b60801b926001600160a01b03169163c187bbc19160048083019260209291908290030181865afa15801561173a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175e9190612116565b6001600160801b031916146117a95760405162461bcd60e51b815260206004820152601160248201527008139bdbdd0819dbdbd90810541417d251607a1b60448201526064016105a9565b50565b601c5460405163ca669fa760e01b81526001600160a01b03909116600482018190523190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561180957600080fd5b505af115801561181d573d6000803e3d6000fd5b5050601e54604051631838e95f60e01b81526001600160a01b039091169250631838e95f9150670de0b6b3a764000090611877906f3c0e4da0cf926dfbf5e31aa66f77199b60801b90601f906020906021906004016121d5565b60206040518083038185885af1158015611895573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118ba9190612045565b50601e60009054906101000a90046001600160a01b03166001600160a01b0316633dbcc8d16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561190e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119329190612045565b60011461198b5760405162461bcd60e51b815260206004820152602160248201527f4c65616b206e6f7420636f756e7465642020696e206d657373616765436f756e6044820152601d60fa1b60648201526084016105a9565b601c546001600160a01b0316316119a2818361205e565b670de0b6b3a7640000146119f85760405162461bcd60e51b815260206004820152601860248201527f5374616b6520616d6f756e74206e6f7420636f756e746564000000000000000060448201526064016105a9565b5050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b6020808252825182820181905260009190848201906040850190845b81811015611a9d5783516001600160a01b031683529284019291840191600101611a78565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611b4d57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611b385783516001600160e01b0319168252928b019260019290920191908b0190611b0e565b50978a01979550505091870191600101611ad1565b50919998505050505050505050565b60005b83811015611b77578181015183820152602001611b5f565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bed57878503603f1901845281518051808752611bce818989018a8501611b5c565b601f01601f191695909501860194509285019290850190600101611ba7565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715611c3457611c34611bfa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c6357611c63611bfa565b604052919050565b60006020808385031215611c7e57600080fd5b825167ffffffffffffffff80821115611c9657600080fd5b818501915085601f830112611caa57600080fd5b815181811115611cbc57611cbc611bfa565b8060051b9150611ccd848301611c3a565b8181529183018401918481019088841115611ce757600080fd5b938501935b83851015611d0557845182529385019390850190611cec565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015611d6657815163ffffffff1684529284019290840190600101611d44565b5050508381038285015284518082528583019183019060005b81811015611d9b57835183529284019291840191600101611d7f565b5090979650505050505050565b80516004811061162257600080fd5b805160ff8116811461162257600080fd5b805163ffffffff8116811461162257600080fd5b8051600781900b811461162257600080fd5b80516001600160a01b038116811461162257600080fd5b600082601f830112611e1657600080fd5b815167ffffffffffffffff811115611e3057611e30611bfa565b611e43601f8201601f1916602001611c3a565b818152846020838601011115611e5857600080fd5b611e69826020830160208701611b5c565b949350505050565b80516001600160801b03198116811461162257600080fd5b80516001600160801b038116811461162257600080fd5b600060208284031215611eb257600080fd5b815167ffffffffffffffff80821115611eca57600080fd5b908301906101808286031215611edf57600080fd5b611ee7611c10565b611ef083611da8565b8152611efe60208401611db7565b6020820152611f0f60408401611dc8565b6040820152611f2060608401611dc8565b6060820152611f3160808401611ddc565b6080820152611f4260a08401611dee565b60a082015260c083015182811115611f5957600080fd5b611f6587828601611e05565b60c08301525060e083015182811115611f7d57600080fd5b611f8987828601611e05565b60e0830152506101008084015183811115611fa357600080fd5b611faf88828701611e05565b8284015250506101209150611fc5828401611e71565b828201526101409150611fd9828401611e89565b9181019190915261016091820151918101919091529392505050565b634e487b7160e01b600052602160045260246000fd5b600181811c9082168061201f57607f821691505b60208210810361203f57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561205757600080fd5b5051919050565b8181038181111561207f57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561209757600080fd5b6120a082611ddc565b9392505050565b6001600160e01b03198316815281516000906120ca816004850160208701611b5c565b919091016004019392505050565b600082516120ea818460208701611b5c565b9190910192915050565b60006020828403121561210657600080fd5b815180151581146120a057600080fd5b60006020828403121561212857600080fd5b6120a082611e71565b8054600090600181811c908083168061214b57607f831692505b6020808410820361216c57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612187576001811461219d576121c8565b60ff198716825285151560051b820197506121c8565b60008981526020902060005b878110156121c2578154848201529086019084016121a9565b83019850505b5050505050505092915050565b6001600160801b0319851681526080602082015260006121f86080830186612131565b828103604084015261220a8186612131565b9050828103606084015261221e8185612131565b97965050505050505056fea2646970667358221220d0cabd577be1d71007f71858588fdc10118a271bd5c6a6c2ed0d950bb9fb398e64736f6c6343000813003360806040523480156200001157600080fd5b50604051620037cf380380620037cf83398101604081905262000034916200005f565b6001600055600380546001600160a01b0319166001600160a01b039290921691909117905562000091565b6000602082840312156200007257600080fd5b81516001600160a01b03811681146200008a57600080fd5b9392505050565b61372e80620000a16000396000f3fe60806040526004361061016a5760003560e01c8063bd3143e2116100d1578063d6224f7a1161008a578063e065da7711610064578063e065da77146104d1578063e3d682e3146104f1578063e9adf37814610507578063f4f3b2001461052757600080fd5b8063d6224f7a1461047c578063d66e84111461049c578063dc590b01146104b157600080fd5b8063bd3143e21461038d578063bf431f4a146103ba578063c02b8b2c146103da578063c187bbc1146103fc578063cbdecc3c1461043c578063ccdff6351461045c57600080fd5b80634783c35b116101235780634783c35b14610278578063534a8465146102b057806362e3cee7146102f357806369a48c5914610313578063873a9ff1146103405780639a61416e1461036057600080fd5b80631838e95f146101af57806320f4591b146101d55780632268a358146101f5578063358188a0146102155780633dbcc8d1146102425780634505da601461025857600080fd5b366101aa576003546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156101a8573d6000803e3d6000fd5b005b600080fd5b6101c26101bd366004612c63565b610547565b6040519081526020015b60405180910390f35b3480156101e157600080fd5b506101a86101f0366004612d22565b610904565b34801561020157600080fd5b506101a8610210366004612d62565b610d40565b34801561022157600080fd5b506101c2610230366004612d62565b60096020526000908152604090205481565b34801561024e57600080fd5b506101c260045481565b34801561026457600080fd5b506101a8610273366004612d95565b610d8c565b34801561028457600080fd5b50600354610298906001600160a01b031681565b6040516001600160a01b0390911681526020016101cc565b3480156102bc57600080fd5b506102e06102cb366004612d62565b60086020526000908152604090205460070b81565b60405160079190910b81526020016101cc565b3480156102ff57600080fd5b506101a861030e366004612e52565b610df0565b34801561031f57600080fd5b5061033361032e366004612d62565b611207565b6040516101cc9190612e6b565b34801561034c57600080fd5b5061033361035b366004612eaf565b611231565b34801561036c57600080fd5b5061038061037b366004612e52565b611256565b6040516101cc919061306c565b34801561039957600080fd5b506103ad6103a83660046130c3565b6114ed565b6040516101cc9190613104565b3480156103c657600080fd5b506101a86103d5366004612e52565b61182b565b3480156103e657600080fd5b506103ef61185a565b6040516101cc9190613166565b34801561040857600080fd5b506104236f3c0e4da0cf926dfbf5e31aa66f77199b60801b81565b6040516001600160801b031990911681526020016101cc565b34801561044857600080fd5b506101a8610457366004612e52565b61190a565b34801561046857600080fd5b506101a86104773660046131a8565b611db0565b34801561048857600080fd5b506101a8610497366004612d95565b611e3d565b3480156104a857600080fd5b50610333611e9d565b3480156104bd57600080fd5b506101a86104cc3660046131d8565b611fc9565b3480156104dd57600080fd5b50600654610298906001600160a01b031681565b3480156104fd57600080fd5b506101c260055481565b34801561051357600080fd5b506101c2610522366004613243565b61250d565b34801561053357600080fd5b506101a8610542366004612d62565b61254c565b60003460055411156105955760405162461bcd60e51b81526020600482015260126024820152714e65656420746f207374616b65206d6f726560701b60448201526064015b60405180910390fd5b6004546105a688888888888861250d565b600081815260076020526040902060060154909250156105fe5760405162461bcd60e51b81526020600482015260136024820152724c65616b20616c72656164792065786973747360681b604482015260640161058c565b604080516101808101825260008082526001602080840191909152600a8385015263ffffffff4216606084015233808352600882528483205460070b608085015260a08401528351601f8c018290048202810182019094528a8452909260c08301918c908c9081908401838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a9081908401838280828437600092019190915250505090825250604080516020601f89018190048102820181019092528781529181019190889088908190840183828082843760009201829052509385525050506001600160801b03198d16602080840191909152346001600160801b031660408085019190915260609093018790528682526007905220815181549293508392829060ff1916600183600381111561074c5761074c612eca565b02179055506020820151815460408401516060850151608086015165ffffffffff001990931661010060ff9095169490940265ffffffff00001916939093176201000063ffffffff928316021771ffffffffffffffffffffffff0000000000001916600160301b919093160267ffffffffffffffff60501b191691909117600160501b6001600160401b039092169190910217815560a08201516001820180546001600160a01b0319166001600160a01b0390921691909117905560c0820151600282019061081b908261335c565b5060e08201516003820190610830908261335c565b506101008201516004820190610846908261335c565b506101208201516101408301516001600160801b0316600160801b0260809190911c1760058201556101609091015160069091015561089060016001600160801b03198c166125f8565b61089d5761089d8a612613565b6108a8838b33612628565b896001600160801b0319168263ffffffff167f946ce06a23d195a3a7347b23b5d271519c93ed3785e7ef5121d5cf56a634a4bd8b8b6004546040516108ef93929190613444565b60405180910390a35050979650505050505050565b600082815260076020526040808220815161018081019092528054829060ff16600381111561093557610935612eca565b600381111561094657610946612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c0909201916109ad906132dc565b80601f01602080910402602001604051908101604052809291908181526020018280546109d9906132dc565b8015610a265780601f106109fb57610100808354040283529160200191610a26565b820191906000526020600020905b815481529060010190602001808311610a0957829003601f168201915b50505050508152602001600382018054610a3f906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6b906132dc565b8015610ab85780601f10610a8d57610100808354040283529160200191610ab8565b820191906000526020600020905b815481529060010190602001808311610a9b57829003601f168201915b50505050508152602001600482018054610ad1906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610afd906132dc565b8015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b031660408201526006909101546060909101529050600181516003811115610ba357610ba3612eca565b1115610bf15760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420617574686f72697a6564203a20756e76657269666965640000000000604482015260640161058c565b60a08101516001600160a01b03163314610c4d5760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420617574686f72697a6564203a206e6f74206f776e6572000000000000604482015260640161058c565b6000826001600160a01b03168261014001516001600160801b031660405160006040518083038185875af1925050503d8060008114610ca8576040519150601f19603f3d011682016040523d82523d6000602084013e610cad565b606091505b5050905080610cf75760405162461bcd60e51b815260206004820152601660248201527522b93937b91034b71031b0b63610333ab731ba34b7b760511b604482015260640161058c565b610d02848633612687565b7fd0ff3e9ba58c4021f27206d985c2a3656e1136c8c4b7077aa26a363137fb70b482604051610d31919061306c565b60405180910390a15050505050565b6003546001600160a01b03163314610d6a5760405162461bcd60e51b815260040161058c90613468565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03163314610db65760405162461bcd60e51b815260040161058c90613468565b60005b8151811015610dec57610de4828281518110610dd757610dd761348e565b6020026020010151610df0565b600101610db9565b5050565b6003546001600160a01b03163314610e1a5760405162461bcd60e51b815260040161058c90613468565b600081815260076020526040808220815161018081019092528054829060ff166003811115610e4b57610e4b612eca565b6003811115610e5c57610e5c612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c090920191610ec3906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610eef906132dc565b8015610f3c5780601f10610f1157610100808354040283529160200191610f3c565b820191906000526020600020905b815481529060010190602001808311610f1f57829003601f168201915b50505050508152602001600382018054610f55906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f81906132dc565b8015610fce5780601f10610fa357610100808354040283529160200191610fce565b820191906000526020600020905b815481529060010190602001808311610fb157829003601f168201915b50505050508152602001600482018054610fe7906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611013906132dc565b80156110605780601f1061103557610100808354040283529160200191611060565b820191906000526020600020905b81548152906001019060200180831161104357829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b0316604082015260069091015460609091015290506001815160038111156110b9576110b9612eca565b146110fa5760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b604482015260640161058c565b6003808252546101408201516040516000926001600160a01b0316916001600160801b0316908381818185875af1925050503d8060008114611158576040519150601f19603f3d011682016040523d82523d6000602084013e61115d565b606091505b505090508061119f5760405162461bcd60e51b815260206004820152600e60248201526d2a3930b739b332b91022b93937b960911b604482015260640161058c565b60408083015160a08401516001600160a01b031660009081526008602052918220805463ffffffff9092169290916111db90849060070b6134ba565b92506101000a8154816001600160401b03021916908360070b6001600160401b03160217905550505050565b6001600160a01b0381166000908152600b6020526040902060609061122b906126dd565b92915050565b6001600160801b031981166000908152600a6020526040902060609061122b906126dd565b61125e612b99565b60008281526007602052604090819020815161018081019092528054829060ff16600381111561129057611290612eca565b60038111156112a1576112a1612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c090920191611308906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611334906132dc565b80156113815780601f1061135657610100808354040283529160200191611381565b820191906000526020600020905b81548152906001019060200180831161136457829003601f168201915b5050505050815260200160038201805461139a906132dc565b80601f01602080910402602001604051908101604052809291908181526020018280546113c6906132dc565b80156114135780601f106113e857610100808354040283529160200191611413565b820191906000526020600020905b8154815290600101906020018083116113f657829003601f168201915b5050505050815260200160048201805461142c906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611458906132dc565b80156114a55780601f1061147a576101008083540402835291602001916114a5565b820191906000526020600020905b81548152906001019060200180831161148857829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b0316604082015260069091015460609091015292915050565b6060816000816001600160401b0381111561150a5761150a612d7f565b60405190808252806020026020018201604052801561154357816020015b611530612b99565b8152602001906001900390816115285790505b50905060005b8281101561182257600760008787848181106115675761156761348e565b602090810292909201358352508101919091526040908101600020815161018081019092528054829060ff1660038111156115a4576115a4612eca565b60038111156115b5576115b5612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c09092019161161c906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611648906132dc565b80156116955780601f1061166a57610100808354040283529160200191611695565b820191906000526020600020905b81548152906001019060200180831161167857829003601f168201915b505050505081526020016003820180546116ae906132dc565b80601f01602080910402602001604051908101604052809291908181526020018280546116da906132dc565b80156117275780601f106116fc57610100808354040283529160200191611727565b820191906000526020600020905b81548152906001019060200180831161170a57829003601f168201915b50505050508152602001600482018054611740906132dc565b80601f016020809104026020016040519081016040528092919081815260200182805461176c906132dc565b80156117b95780601f1061178e576101008083540402835291602001916117b9565b820191906000526020600020905b81548152906001019060200180831161179c57829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b03166040820152600690910154606090910152825183908390811061180f5761180f61348e565b6020908102919091010152600101611549565b50949350505050565b6003546001600160a01b031633146118555760405162461bcd60e51b815260040161058c90613468565b600555565b6060600061186860016126ea565b90506000816001600160401b0381111561188457611884612d7f565b6040519080825280602002602001820160405280156118ad578160200160208202803683370190505b50905060005b82811015611903576118c66001826126f4565b8282815181106118d8576118d861348e565b6001600160801b031990921660209283029190910190910152806118fb816134e9565b9150506118b3565b5092915050565b6003546001600160a01b031633146119345760405162461bcd60e51b815260040161058c90613468565b600081815260076020526040808220815161018081019092528054829060ff16600381111561196557611965612eca565b600381111561197657611976612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c0909201916119dd906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611a09906132dc565b8015611a565780601f10611a2b57610100808354040283529160200191611a56565b820191906000526020600020905b815481529060010190602001808311611a3957829003601f168201915b50505050508152602001600382018054611a6f906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9b906132dc565b8015611ae85780601f10611abd57610100808354040283529160200191611ae8565b820191906000526020600020905b815481529060010190602001808311611acb57829003601f168201915b50505050508152602001600482018054611b01906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2d906132dc565b8015611b7a5780601f10611b4f57610100808354040283529160200191611b7a565b820191906000526020600020905b815481529060010190602001808311611b5d57829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b031660408201526006909101546060909101529050600181516003811115611bd357611bd3612eca565b14611c145760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b604482015260640161058c565b6002815260065460a082015161014083015160408401516001600160a01b03909316926340c10f19929190600a90611c5390839063ffffffff16613502565b611c5d919061352d565b611c679190613561565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b03166024820152604401600060405180830381600087803b158015611cb657600080fd5b505af1158015611cca573d6000803e3d6000fd5b5050505060008160a001516001600160a01b03168261014001516001600160801b031660405160006040518083038185875af1925050503d8060008114611d2d576040519150601f19603f3d011682016040523d82523d6000602084013e611d32565b606091505b5050905080611d745760405162461bcd60e51b815260206004820152600e60248201526d2a3930b739b332b91022b93937b960911b604482015260640161058c565b60408083015160a08401516001600160a01b031660009081526008602052918220805463ffffffff9092169290916111db90849060070b613581565b6003546001600160a01b03163314611dda5760405162461bcd60e51b815260040161058c90613468565b6001600160a01b038116600090815260096020526040812054908312611e0957611e0483826135b0565b611e1c565b611e12836135c3565b611e1c90826135df565b6001600160a01b039092166000908152600960205260409020919091555050565b6003546001600160a01b03163314611e675760405162461bcd60e51b815260040161058c90613468565b60005b8151811015610dec57611e95828281518110611e8857611e8861348e565b602002602001015161190a565b600101611e6a565b60606004546001600160401b03811115611eb957611eb9612d7f565b604051908082528060200260200182016040528015611ee2578160200160208202803683370190505b5090506000611ef160016126dd565b80519091506000805b82811015611fc2576000611f4c600a6000878581518110611f1d57611f1d61348e565b60200260200101516001600160801b0319166001600160801b03191681526020019081526020016000206126dd565b805190915060005b81811015611faf57828181518110611f6e57611f6e61348e565b6020026020010151888680611f82906134e9565b975081518110611f9457611f9461348e565b6020908102919091010152611fa8816134e9565b9050611f54565b50611fb9836134e9565b92505050611efa565b5050505090565b6003546001600160a01b03163314611ff35760405162461bcd60e51b815260040161058c90613468565b828181146120355760405162461bcd60e51b815260206004820152600f60248201526e6c656e206d69736d61746368696e6760881b604482015260640161058c565b60005b81811015612505576000600760008686858181106120585761205861348e565b602090810292909201358352508101919091526040908101600020815161018081019092528054829060ff16600381111561209557612095612eca565b60038111156120a6576120a6612eca565b8152815460ff610100820416602083015263ffffffff62010000820481166040840152600160301b8204166060830152600160501b900460070b608082015260018201546001600160a01b031660a082015260028201805460c09092019161210d906132dc565b80601f0160208091040260200160405190810160405280929190818152602001828054612139906132dc565b80156121865780601f1061215b57610100808354040283529160200191612186565b820191906000526020600020905b81548152906001019060200180831161216957829003601f168201915b5050505050815260200160038201805461219f906132dc565b80601f01602080910402602001604051908101604052809291908181526020018280546121cb906132dc565b80156122185780601f106121ed57610100808354040283529160200191612218565b820191906000526020600020905b8154815290600101906020018083116121fb57829003601f168201915b50505050508152602001600482018054612231906132dc565b80601f016020809104026020016040519081016040528092919081815260200182805461225d906132dc565b80156122aa5780601f1061227f576101008083540402835291602001916122aa565b820191906000526020600020905b81548152906001019060200180831161228d57829003601f168201915b505050918352505060058201546001600160801b0319608082901b166020830152600160801b90046001600160801b031660408201526006909101546060909101528051909150600090600381111561230557612305612eca565b905060018111156123425760405162461bcd60e51b81526020600482015260076024820152664e6f74206e6f7760c81b604482015260640161058c565b8061234c57600182525b87878481811061235e5761235e61348e565b905060200201602081019061237391906135f2565b63ffffffff16604083015281600760008888878181106123955761239561348e565b6020908102929092013583525081019190915260400160002081518154829060ff191660018360038111156123cc576123cc612eca565b02179055506020820151815460408401516060850151608086015165ffffffffff001990931661010060ff9095169490940265ffffffff00001916939093176201000063ffffffff928316021771ffffffffffffffffffffffff0000000000001916600160301b919093160267ffffffffffffffff60501b191691909117600160501b6001600160401b039092169190910217815560a08201516001820180546001600160a01b0319166001600160a01b0390921691909117905560c0820151600282019061249b908261335c565b5060e082015160038201906124b0908261335c565b5061010082015160048201906124c6908261335c565b506101208201516101408301516001600160801b0316600160801b0260809190911c176005820155610160909101516006909101555050600101612038565b505050505050565b600086868686868660405160200161252a96959493929190613618565b6040516020818303038152906040528051906020012090509695505050505050565b6003546001600160a01b031633146125765760405162461bcd60e51b815260040161058c90613468565b6040516370a0823160e01b81523060048201526125f59033906001600160a01b038416906370a0823190602401602060405180830381865afa1580156125c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e49190613661565b6001600160a01b0384169190612700565b50565b600081815260018301602052604081205415155b9392505050565b610dec60016001600160801b03198316612757565b6001600160801b031982166000908152600a6020526040902061264b9084612757565b506001600160a01b0381166000908152600b6020526040902061266e9084612757565b5060046000815461267e906134e9565b90915550505050565b6001600160801b031982166000908152600a602052604090206126aa9084612763565b506001600160a01b0381166000908152600b602052604090206126cd9084612763565b5060046000815461267e9061367a565b6060600061260c8361276f565b600061122b825490565b600061260c83836127cb565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526127529084906127f5565b505050565b600061260c83836128c7565b600061260c8383612916565b6060816000018054806020026020016040519081016040528092919081815260200182805480156127bf57602002820191906000526020600020905b8154815260200190600101908083116127ab575b50505050509050919050565b60008260000182815481106127e2576127e261348e565b9060005260206000200154905092915050565b600061284a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a099092919063ffffffff16565b80519091501561275257808060200190518101906128689190613691565b6127525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058c565b600081815260018301602052604081205461290e5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561122b565b50600061122b565b600081815260018301602052604081205480156129ff57600061293a6001836135df565b855490915060009061294e906001906135df565b90508181146129b357600086600001828154811061296e5761296e61348e565b90600052602060002001549050808760000184815481106129915761299161348e565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806129c4576129c46136b3565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061122b565b600091505061122b565b6060612a188484600085612a20565b949350505050565b606082471015612a815760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058c565b600080866001600160a01b03168587604051612a9d91906136c9565b60006040518083038185875af1925050503d8060008114612ada576040519150601f19603f3d011682016040523d82523d6000602084013e612adf565b606091505b5091509150612af087838387612afb565b979650505050505050565b60608315612b6a578251600003612b63576001600160a01b0385163b612b635760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058c565b5081612a18565b612a188383815115612b7f5781518083602001fd5b8060405162461bcd60e51b815260040161058c91906136e5565b60408051610180810190915280600081526000602082018190526040820181905260608083018290526080830182905260a0830182905260c0830181905260e08301819052610100830152610120820181905261014082018190526101609091015290565b80356001600160801b031981168114612c1657600080fd5b919050565b60008083601f840112612c2d57600080fd5b5081356001600160401b03811115612c4457600080fd5b602083019150836020828501011115612c5c57600080fd5b9250929050565b60008060008060008060006080888a031215612c7e57600080fd5b612c8788612bfe565b965060208801356001600160401b0380821115612ca357600080fd5b612caf8b838c01612c1b565b909850965060408a0135915080821115612cc857600080fd5b612cd48b838c01612c1b565b909650945060608a0135915080821115612ced57600080fd5b50612cfa8a828b01612c1b565b989b979a50959850939692959293505050565b6001600160a01b03811681146125f557600080fd5b600080600060608486031215612d3757600080fd5b612d4084612bfe565b9250602084013591506040840135612d5781612d0d565b809150509250925092565b600060208284031215612d7457600080fd5b813561260c81612d0d565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215612da857600080fd5b82356001600160401b0380821115612dbf57600080fd5b818501915085601f830112612dd357600080fd5b813581811115612de557612de5612d7f565b8060051b604051601f19603f83011681018181108582111715612e0a57612e0a612d7f565b604052918252848201925083810185019188831115612e2857600080fd5b938501935b82851015612e4657843584529385019392850192612e2d565b98975050505050505050565b600060208284031215612e6457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015612ea357835183529284019291840191600101612e87565b50909695505050505050565b600060208284031215612ec157600080fd5b61260c82612bfe565b634e487b7160e01b600052602160045260246000fd5b60048110612efe57634e487b7160e01b600052602160045260246000fd5b9052565b60005b83811015612f1d578181015183820152602001612f05565b50506000910152565b60008151808452612f3e816020860160208601612f02565b601f01601f19169290920160200192915050565b6000610180612f62848451612ee0565b6020830151612f76602086018260ff169052565b506040830151612f8e604086018263ffffffff169052565b506060830151612fa6606086018263ffffffff169052565b506080830151612fbb608086018260070b9052565b5060a0830151612fd660a08601826001600160a01b03169052565b5060c08301518160c0860152612fee82860182612f26565b91505060e083015184820360e08601526130088282612f26565b91505061010080840151858303828701526130238382612f26565b9250505061012080840151613043828701826001600160801b0319169052565b5050610140838101516001600160801b0316908501526101609283015192909301919091525090565b60208152600061260c6020830184612f52565b60008083601f84011261309157600080fd5b5081356001600160401b038111156130a857600080fd5b6020830191508360208260051b8501011115612c5c57600080fd5b600080602083850312156130d657600080fd5b82356001600160401b038111156130ec57600080fd5b6130f88582860161307f565b90969095509350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561315957603f19888603018452613147858351612f52565b9450928501929085019060010161312b565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612ea35783516001600160801b03191683529284019291840191600101613182565b600080604083850312156131bb57600080fd5b8235915060208301356131cd81612d0d565b809150509250929050565b600080600080604085870312156131ee57600080fd5b84356001600160401b038082111561320557600080fd5b6132118883890161307f565b9096509450602087013591508082111561322a57600080fd5b506132378782880161307f565b95989497509550505050565b6000806000806000806060878903121561325c57600080fd5b86356001600160401b038082111561327357600080fd5b61327f8a838b01612c1b565b9098509650602089013591508082111561329857600080fd5b6132a48a838b01612c1b565b909650945060408901359150808211156132bd57600080fd5b506132ca89828a01612c1b565b979a9699509497509295939492505050565b600181811c908216806132f057607f821691505b60208210810361331057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561275257600081815260208120601f850160051c8101602086101561333d5750805b601f850160051c820191505b8181101561250557828155600101613349565b81516001600160401b0381111561337557613375612d7f565b6133898161338384546132dc565b84613316565b602080601f8311600181146133be57600084156133a65750858301515b600019600386901b1c1916600185901b178555612505565b600085815260208120601f198616915b828110156133ed578886015182559484019460019091019084016133ce565b508582101561340b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152600061345860408301858761341b565b9050826020830152949350505050565b6020808252600c908201526b4e6f74206d756c746973696760a01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600782810b9082900b03677fffffffffffffff198112677fffffffffffffff8213171561122b5761122b6134a4565b6000600182016134fb576134fb6134a4565b5060010190565b6001600160801b03818116838216028082169190828114613525576135256134a4565b505092915050565b60006001600160801b038084168061355557634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6001600160801b03828116828216039080821115611903576119036134a4565b600781810b9083900b01677fffffffffffffff8113677fffffffffffffff198212171561122b5761122b6134a4565b8082018082111561122b5761122b6134a4565b6000600160ff1b82016135d8576135d86134a4565b5060000390565b8181038181111561122b5761122b6134a4565b60006020828403121561360457600080fd5b813563ffffffff8116811461260c57600080fd5b60608152600061362c60608301888a61341b565b828103602084015261363f81878961341b565b9050828103604084015261365481858761341b565b9998505050505050505050565b60006020828403121561367357600080fd5b5051919050565b600081613689576136896134a4565b506000190190565b6000602082840312156136a357600080fd5b8151801515811461260c57600080fd5b634e487b7160e01b600052603160045260246000fd5b600082516136db818460208701612f02565b9190910192915050565b60208152600061260c6020830184612f2656fea2646970667358221220e6d3c90f20dccba2690f60fd6dd951d1659cdbc0cf8c9f979ebc5a9f8b5b5eef64736f6c63430008130033",
    "sourceMap": "126:2782:36:-:0;;;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3161:44:3;;;;;;;;;;-1:-1:-1;;;;;;459:10:35;;;;168:25:37;459:7:35;;141:18:37;459:10:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;440:29;;;-1:-1:-1;;;;;;440:29:35;-1:-1:-1;;;;;440:29:35;;;;;;;;;;492:10;;-1:-1:-1;;;;;;492:10:35;;500:1;492:10;;;168:25:37;492:7:35;;;;141:18:37;;492:10:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;475:27;;;-1:-1:-1;;;;;;475:27:35;-1:-1:-1;;;;;475:27:35;;;;;;;;;;527:10;;-1:-1:-1;;;;;;527:10:35;;535:1;527:10;;;168:25:37;527:7:35;;;;141:18:37;;527:10:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;508:29;;;-1:-1:-1;;;;;;508:29:35;-1:-1:-1;;;;;508:29:35;;;;;;583:8;;560:33;;583:8;;;560:33;;;:::i;:::-;-1:-1:-1;;;;;1059:32:37;;;1041:51;;1029:2;1014:18;560:33:35;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;544:49:35;;;-1:-1:-1;;;;;;544:49:35;-1:-1:-1;;;;;544:49:35;;;;;;;;;;168:26:36;;;;;;;;;;;;-1:-1:-1;;;168:26:36;;;;;;;;;;:::i;:::-;;200:30;;;;;;;;;;;;;-1:-1:-1;;;200:30:36;;;;;;;;;;:::i;:::-;-1:-1:-1;236:31:36;;;;;;;;;;;;-1:-1:-1;;;236:31:36;;;;;;;;;;:::i;:::-;;126:2782;;;;;;;;;;;;;;;;;;;;:::o;204:290:37:-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;369:16;;-1:-1:-1;;;;;414:31:37;;404:42;;394:70;;460:1;457;450:12;394:70;483:5;204:290;-1:-1:-1;;;204:290:37:o;1103:127::-;1164:10;1159:3;1155:20;1152:1;1145:31;1195:4;1192:1;1185:15;1219:4;1216:1;1209:15;1235:380;1314:1;1310:12;;;;1357;;;1378:61;;1432:4;1424:6;1420:17;1410:27;;1378:61;1485:2;1477:6;1474:14;1454:18;1451:38;1448:161;;1531:10;1526:3;1522:20;1519:1;1512:31;1566:4;1563:1;1556:15;1594:4;1591:1;1584:15;1448:161;;1235:380;;;:::o;1746:545::-;1848:2;1843:3;1840:11;1837:448;;;1884:1;1909:5;1905:2;1898:17;1954:4;1950:2;1940:19;2024:2;2012:10;2008:19;2005:1;2001:27;1995:4;1991:38;2060:4;2048:10;2045:20;2042:47;;;-1:-1:-1;2083:4:37;2042:47;2138:2;2133:3;2129:12;2126:1;2122:20;2116:4;2112:31;2102:41;;2193:82;2211:2;2204:5;2201:13;2193:82;;;2256:17;;;2237:1;2226:13;2193:82;;;2197:3;;;1837:448;1746:545;;;:::o;2467:1352::-;2587:10;;-1:-1:-1;;;;;2609:30:37;;2606:56;;;2642:18;;:::i;:::-;2671:97;2761:6;2721:38;2753:4;2747:11;2721:38;:::i;:::-;2715:4;2671:97;:::i;:::-;2823:4;;2887:2;2876:14;;2904:1;2899:663;;;;3606:1;3623:6;3620:89;;;-1:-1:-1;3675:19:37;;;3669:26;3620:89;-1:-1:-1;;2424:1:37;2420:11;;;2416:24;2412:29;2402:40;2448:1;2444:11;;;2399:57;3722:81;;2869:944;;2899:663;1693:1;1686:14;;;1730:4;1717:18;;-1:-1:-1;;2935:20:37;;;3053:236;3067:7;3064:1;3061:14;3053:236;;;3156:19;;;3150:26;3135:42;;3248:27;;;;3216:1;3204:14;;;;3083:19;;3053:236;;;3057:3;3317:6;3308:7;3305:19;3302:201;;;3378:19;;;3372:26;-1:-1:-1;;3461:1:37;3457:14;;;3473:3;3453:24;3449:37;3445:42;3430:58;3415:74;;3302:201;-1:-1:-1;;;;;3549:1:37;3533:14;;;3529:22;3516:36;;-1:-1:-1;2467:1352:37:o;:::-;126:2782:36;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c8063916a17c6116100a2578063ba414fa611610071578063ba414fa6146101a2578063bca86986146101ba578063bd23c4bb146101c2578063e20c9f71146101ca578063fa7626d4146101d257600080fd5b8063916a17c6146101825780639892fbc61461018a578063b54195a214610192578063b5508aa91461019a57600080fd5b80633f7286f4116100de5780633f7286f41461014857806366d9a9a01461015057806385226c8114610165578063867f93501461017a57600080fd5b80630a9254e4146101105780631ed7831c1461011a5780632cf15649146101385780633e5e3c2314610140575b600080fd5b6101186101df565b005b610122610260565b60405161012f9190611a5c565b60405180910390f35b6101186102c2565b610122610619565b610122610679565b6101586106d9565b60405161012f9190611aa9565b61016d6107c8565b60405161012f9190611b80565b610118610898565b610158610b5f565b610118610c45565b610118611009565b61016d61142c565b6101aa6114fc565b604051901515815260200161012f565b610118611627565b6101186117ac565b6101226119fc565b6000546101aa9060ff1681565b601c5460405163c88a5e6d60e01b81526001600160a01b039091166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156102b857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161029a575b5050505050905090565b6102ca6117ac565b60408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050601e54601c546040516369a48c5960e01b81526001600160a01b03918216600482015292935016906369a48c5990602401600060405180830381865afa15801561035b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103839190810190611c6b565b60008151811061039557610395611d11565b6020026020010151816000815181106103b0576103b0611d11565b6020026020010181815250506014826000815181106103d1576103d1611d11565b63ffffffff9290921660209283029190910190910152601b5460405163ca669fa760e01b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561044057600080fd5b505af1158015610454573d6000803e3d6000fd5b5050601e5460405163dc590b0160e01b81526001600160a01b03909116925063dc590b01915061048a9085908590600401611d27565b600060405180830381600087803b1580156104a457600080fd5b505af11580156104b8573d6000803e3d6000fd5b5050601e548351600093506001600160a01b039091169150639a61416e90849084906104e6576104e6611d11565b60200260200101516040518263ffffffff1660e01b815260040161050c91815260200190565b600060405180830381865afa158015610529573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105519190810190611ea0565b9050806040015163ffffffff166014146105b25760405162461bcd60e51b815260206004820152601a60248201527f437269746963616c526174696f206e6f742077656c6c2073657400000000000060448201526064015b60405180910390fd5b6001815160038111156105c7576105c7611ff5565b146106145760405162461bcd60e51b815260206004820152601860248201527f4c65616b20737461747573206e6f742077656c6c20736574000000000000000060448201526064016105a9565b505050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156107bf5760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156107a757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116107695790505b505050505081525050815260200190600101906106fd565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156107bf57838290600052602060002001805461080b9061200b565b80601f01602080910402602001604051908101604052809291908181526020018280546108379061200b565b80156108845780601f1061085957610100808354040283529160200191610884565b820191906000526020600020905b81548152906001019060200180831161086757829003601f168201915b5050505050815260200190600101906107ec565b6108a06117ac565b601c54601e546040516369a48c5960e01b81526001600160a01b0392831660048201819052319260009216906369a48c5990602401600060405180830381865afa1580156108f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261091a9190810190611c6b565b60008151811061092c5761092c611d11565b6020908102919091010151601c5460405163ca669fa760e01b81526001600160a01b039091166004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b5050601e54601c546040516320f4591b60e01b81526f3c0e4da0cf926dfbf5e31aa66f77199b60801b6004820152602481018690526001600160a01b039182166044820152911692506320f4591b9150606401600060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b5050601c54601e5460408051633dbcc8d160e01b815290516001600160a01b03938416319550929091169250633dbcc8d19160048083019260209291908290030181865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190612045565b15610aff5760405162461bcd60e51b815260206004820152602760248201527f43616e63656c204c65616b206e6f7420636f756e74656420696e206d6573736160448201526619d950dbdd5b9d60ca1b60648201526084016105a9565b610b09838261205e565b670de0b6b3a7640000146106145760405162461bcd60e51b815260206004820152601960248201527f5374616b6520616d6f756e74206e6f742072657475726e65640000000000000060448201526064016105a9565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156107bf5760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610c2d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610bef5790505b50505050508152505081526020019060010190610b83565b610c4d6102c2565b601c54601b546040516303223eab60e11b81526001600160a01b03918216600482015291163190737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015610cad57600080fd5b505af1158015610cc1573d6000803e3d6000fd5b5050601e54601c546040516369a48c5960e01b81526001600160a01b0391821660048201529116925063cbdecc3c915082906369a48c5990602401600060405180830381865afa158015610d19573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d419190810190611c6b565b600081518110610d5357610d53611d11565b60200260200101516040518263ffffffff1660e01b8152600401610d7991815260200190565b600060405180830381600087803b158015610d9357600080fd5b505af1158015610da7573d6000803e3d6000fd5b5050601c546001600160a01b0316319150610dc49050828261205e565b670de0b6b3a764000014610e125760405162461bcd60e51b81526020600482015260156024820152742bb4ba34323930bbb7103b30b63ab29032b93937b960591b60448201526064016105a9565b601e54601c546040516301ac0c4560e51b81526001600160a01b03918216600482015291169063358188a090602401602060405180830381865afa158015610e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e829190612045565b670de0b6b3a764000014610ed35760405162461bcd60e51b815260206004820152601860248201527710dc99591a5d081b9bdd19481b9bdd081dd95b1b081cd95d60421b60448201526064016105a9565b601e54601c5460405163534a846560e01b81526001600160a01b03918216600482015291169063534a846590602401602060405180830381865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190612085565b60070b601414610f8f5760405162461bcd60e51b8152602060048201526017602482015276151c9d5cdd14d8dbdc99481b9bdd081dd95b1b081cd95d604a1b60448201526064016105a9565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610fed57600080fd5b505af1158015611001573d6000803e3d6000fd5b505050505050565b6110116102c2565b601c54601b546040516303223eab60e11b81526001600160a01b0391821660048201819052919092163191903190737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801561107857600080fd5b505af115801561108c573d6000803e3d6000fd5b5050601e54601c546040516369a48c5960e01b81526001600160a01b039182166004820152911692506362e3cee7915082906369a48c5990602401600060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110c9190810190611c6b565b60008151811061111e5761111e611d11565b60200260200101516040518263ffffffff1660e01b815260040161114491815260200190565b600060405180830381600087803b15801561115e57600080fd5b505af1158015611172573d6000803e3d6000fd5b5050601c54601b546001600160a01b0391821631935016319050611196838261205e565b670de0b6b3a7640000146111ec5760405162461bcd60e51b815260206004820152601d60248201527f57697468647261776e2076616c7565206572726f7220746f206d73696700000060448201526064016105a9565b83821461123b5760405162461bcd60e51b815260206004820152601d60248201527f57697468647261776e2076616c7565206572726f7220746f206d73696700000060448201526064016105a9565b601e54601c546040516301ac0c4560e51b81526001600160a01b03918216600482015291169063358188a090602401602060405180830381865afa158015611287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ab9190612045565b156112f35760405162461bcd60e51b815260206004820152601860248201527710dc99591a5d081b9bdd19481b9bdd081dd95b1b081cd95d60421b60448201526064016105a9565b601e54601c5460405163534a846560e01b81526001600160a01b03918216600482015291169063534a846590602401602060405180830381865afa15801561133f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113639190612085565b60070b601319146113b05760405162461bcd60e51b8152602060048201526017602482015276151c9d5cdd14d8dbdc99481b9bdd081dd95b1b081cd95d604a1b60448201526064016105a9565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561140e57600080fd5b505af1158015611422573d6000803e3d6000fd5b5050505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156107bf57838290600052602060002001805461146f9061200b565b80601f016020809104026020016040519081016040528092919081815260200182805461149b9061200b565b80156114e85780601f106114bd576101008083540402835291602001916114e8565b820191906000526020600020905b8154815290600101906020018083116114cb57829003601f168201915b505050505081526020019060010190611450565b60008054610100900460ff161561151c5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156116225760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916115aa917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016120a7565b60408051601f19818403018152908290526115c4916120d8565b6000604051808303816000865af19150503d8060008114611601576040519150601f19603f3d011682016040523d82523d6000602084013e611606565b606091505b509150508080602001905181019061161e91906120f4565b9150505b919050565b601e5460408051633dbcc8d160e01b815290516000926001600160a01b031691633dbcc8d19160048083019260209291908290030181865afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116959190612045565b905080156116de5760405162461bcd60e51b81526020600482015260166024820152750813595cdcd859d9481b9bdd081a5b9a5d1a585d195960521b60448201526064016105a9565b601e546040805163c187bbc160e01b815290516f3c0e4da0cf926dfbf5e31aa66f77199b60801b926001600160a01b03169163c187bbc19160048083019260209291908290030181865afa15801561173a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175e9190612116565b6001600160801b031916146117a95760405162461bcd60e51b815260206004820152601160248201527008139bdbdd0819dbdbd90810541417d251607a1b60448201526064016105a9565b50565b601c5460405163ca669fa760e01b81526001600160a01b03909116600482018190523190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b15801561180957600080fd5b505af115801561181d573d6000803e3d6000fd5b5050601e54604051631838e95f60e01b81526001600160a01b039091169250631838e95f9150670de0b6b3a764000090611877906f3c0e4da0cf926dfbf5e31aa66f77199b60801b90601f906020906021906004016121d5565b60206040518083038185885af1158015611895573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118ba9190612045565b50601e60009054906101000a90046001600160a01b03166001600160a01b0316633dbcc8d16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561190e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119329190612045565b60011461198b5760405162461bcd60e51b815260206004820152602160248201527f4c65616b206e6f7420636f756e7465642020696e206d657373616765436f756e6044820152601d60fa1b60648201526084016105a9565b601c546001600160a01b0316316119a2818361205e565b670de0b6b3a7640000146119f85760405162461bcd60e51b815260206004820152601860248201527f5374616b6520616d6f756e74206e6f7420636f756e746564000000000000000060448201526064016105a9565b5050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156102b8576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161029a575050505050905090565b6020808252825182820181905260009190848201906040850190845b81811015611a9d5783516001600160a01b031683529284019291840191600101611a78565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611b4d57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015611b385783516001600160e01b0319168252928b019260019290920191908b0190611b0e565b50978a01979550505091870191600101611ad1565b50919998505050505050505050565b60005b83811015611b77578181015183820152602001611b5f565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611bed57878503603f1901845281518051808752611bce818989018a8501611b5c565b601f01601f191695909501860194509285019290850190600101611ba7565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715611c3457611c34611bfa565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611c6357611c63611bfa565b604052919050565b60006020808385031215611c7e57600080fd5b825167ffffffffffffffff80821115611c9657600080fd5b818501915085601f830112611caa57600080fd5b815181811115611cbc57611cbc611bfa565b8060051b9150611ccd848301611c3a565b8181529183018401918481019088841115611ce757600080fd5b938501935b83851015611d0557845182529385019390850190611cec565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b604080825283519082018190526000906020906060840190828701845b82811015611d6657815163ffffffff1684529284019290840190600101611d44565b5050508381038285015284518082528583019183019060005b81811015611d9b57835183529284019291840191600101611d7f565b5090979650505050505050565b80516004811061162257600080fd5b805160ff8116811461162257600080fd5b805163ffffffff8116811461162257600080fd5b8051600781900b811461162257600080fd5b80516001600160a01b038116811461162257600080fd5b600082601f830112611e1657600080fd5b815167ffffffffffffffff811115611e3057611e30611bfa565b611e43601f8201601f1916602001611c3a565b818152846020838601011115611e5857600080fd5b611e69826020830160208701611b5c565b949350505050565b80516001600160801b03198116811461162257600080fd5b80516001600160801b038116811461162257600080fd5b600060208284031215611eb257600080fd5b815167ffffffffffffffff80821115611eca57600080fd5b908301906101808286031215611edf57600080fd5b611ee7611c10565b611ef083611da8565b8152611efe60208401611db7565b6020820152611f0f60408401611dc8565b6040820152611f2060608401611dc8565b6060820152611f3160808401611ddc565b6080820152611f4260a08401611dee565b60a082015260c083015182811115611f5957600080fd5b611f6587828601611e05565b60c08301525060e083015182811115611f7d57600080fd5b611f8987828601611e05565b60e0830152506101008084015183811115611fa357600080fd5b611faf88828701611e05565b8284015250506101209150611fc5828401611e71565b828201526101409150611fd9828401611e89565b9181019190915261016091820151918101919091529392505050565b634e487b7160e01b600052602160045260246000fd5b600181811c9082168061201f57607f821691505b60208210810361203f57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561205757600080fd5b5051919050565b8181038181111561207f57634e487b7160e01b600052601160045260246000fd5b92915050565b60006020828403121561209757600080fd5b6120a082611ddc565b9392505050565b6001600160e01b03198316815281516000906120ca816004850160208701611b5c565b919091016004019392505050565b600082516120ea818460208701611b5c565b9190910192915050565b60006020828403121561210657600080fd5b815180151581146120a057600080fd5b60006020828403121561212857600080fd5b6120a082611e71565b8054600090600181811c908083168061214b57607f831692505b6020808410820361216c57634e487b7160e01b600052602260045260246000fd5b83885260208801828015612187576001811461219d576121c8565b60ff198716825285151560051b820197506121c8565b60008981526020902060005b878110156121c2578154848201529086019084016121a9565b83019850505b5050505050505092915050565b6001600160801b0319851681526080602082015260006121f86080830186612131565b828103604084015261220a8186612131565b9050828103606084015261221e8185612131565b97965050505050505056fea2646970667358221220d0cabd577be1d71007f71858588fdc10118a271bd5c6a6c2ed0d950bb9fb398e64736f6c63430008130033",
    "sourceMap": "126:2782:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:65:35;;;:::i;:::-;;2161:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1112:513:36;;;:::i;2930:133:6:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;657:449:36:-;;;:::i;2778:146:6:-;;;:::i;1631:539:36:-;;;:::i;2176:730::-;;;:::i;1866:141:6:-;;;:::i;1819:584:0:-;;;:::i;:::-;;;3854:14:37;;3847:22;3829:41;;3817:2;3802:18;1819:584:0;3689:187:37;671:243:35;;;:::i;274:377:36:-;;;:::i;2013:142:6:-;;;:::i;1572:26:0:-;;;;;;;;;600:65:35;642:6;;634:24;;-1:-1:-1;;;634:24:35;;-1:-1:-1;;;;;642:6:35;;;634:24;;;4081:51:37;650:7:35;4148:18:37;;;4141:34;634:7:35;;;;4054:18:37;;634:24:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:65::o;2161:134:6:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:6;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1112:513:36:-;1157:16;:14;:16::i;:::-;1208:15;;;1221:1;1208:15;;;;;;;;;1183:22;;1208:15;;;;;;;;;-1:-1:-1;;1256:16:36;;;1270:1;1256:16;;;;;;;;;1183:40;;-1:-1:-1;1233:20:36;;1256:16;-1:-1:-1;1256:16:36;;;;;;;;;;;-1:-1:-1;;1291:2:36;;1313:6;;1291:29;;-1:-1:-1;;;1291:29:36;;-1:-1:-1;;;;;1313:6:36;;;1291:29;;;4464:51:37;1233:39:36;;-1:-1:-1;1291:2:36;;:21;;4437:18:37;;1291:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1291:29:36;;;;;;;;;;;;:::i;:::-;1321:1;1291:32;;;;;;;;:::i;:::-;;;;;;;1282:3;1286:1;1282:6;;;;;;;;:::i;:::-;;;;;;:41;;;;;1345:2;1333:6;1340:1;1333:9;;;;;;;;:::i;:::-;:14;;;;;:9;;;;;;;;;;;:14;1366:8;;1357:18;;-1:-1:-1;;;1357:18:36;;-1:-1:-1;;;;;1366:8:36;;;1357:18;;;4464:51:37;1357:8:36;;;;4437:18:37;;1357::36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1385:2:36;;:28;;-1:-1:-1;;;1385:28:36;;-1:-1:-1;;;;;1385:2:36;;;;-1:-1:-1;1385:15:36;;-1:-1:-1;1385:28:36;;1401:6;;1409:3;;1385:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1443:2:36;;1454:6;;1423:17;;-1:-1:-1;;;;;;1443:2:36;;;;-1:-1:-1;1443:10:36;;1454:3;;1423:17;;1454:6;;;;:::i;:::-;;;;;;;1443:18;;;;;;;;;;;;;7457:25:37;;7445:2;7430:18;;7311:177;1443:18:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1443:18:36;;;;;;;;;;;;:::i;:::-;1423:38;;1479:5;:22;;;:28;;1505:2;1479:28;1471:67;;;;-1:-1:-1;;;1471:67:36;;11174:2:37;1471:67:36;;;11156:21:37;11213:2;11193:18;;;11186:30;11252:28;11232:18;;;11225:56;11298:18;;1471:67:36;;;;;;;;;1572:17;1556:12;;:33;;;;;;;;:::i;:::-;;1548:70;;;;-1:-1:-1;;;1548:70:36;;11661:2:37;1548:70:36;;;11643:21:37;11700:2;11680:18;;;11673:30;11739:26;11719:18;;;11712:54;11783:18;;1548:70:36;11459:348:37;1548:70:36;1147:478;;;1112:513::o;2930:133:6:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:6;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:6;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:449:36;700:16;:14;:16::i;:::-;745:6;;786:2;;:29;;-1:-1:-1;;;786:29:36;;-1:-1:-1;;;;;745:6:36;;;786:29;;;4464:51:37;;;745:14:36;;726:16;;786:2;;:21;;4437:18:37;;786:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;786:29:36;;;;;;;;;;;;:::i;:::-;816:1;786:32;;;;;;;;:::i;:::-;;;;;;;;;;;837:6;;828:16;;-1:-1:-1;;;828:16:36;;-1:-1:-1;;;;;837:6:36;;;828:16;;;4464:51:37;786:32:36;;-1:-1:-1;828:8:36;;;;4437:18:37;;828:16:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;854:2:36;;886:6;;854:39;;-1:-1:-1;;;854:39:36;;-1:-1:-1;;;854:39:36;;;12399:71:37;12486:18;;;12479:34;;;-1:-1:-1;;;;;886:6:36;;;12529:18:37;;;12522:60;854:2:36;;;-1:-1:-1;854:13:36;;-1:-1:-1;12372:18:37;;854:39:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;922:6:36;;955:2;;:17;;;-1:-1:-1;;;955:17:36;;;;-1:-1:-1;;;;;922:6:36;;;:14;;-1:-1:-1;955:2:36;;;;;-1:-1:-1;955:15:36;;:17;;;;;;;;;;;;;;:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:22;947:74;;;;-1:-1:-1;;;947:74:36;;12984:2:37;947:74:36;;;12966:21:37;13023:2;13003:18;;;12996:30;13062:34;13042:18;;;13035:62;-1:-1:-1;;;13113:18:37;;;13106:37;13160:19;;947:74:36;12782:403:37;947:74:36;1039:19;1050:8;1039;:19;:::i;:::-;1062:7;1039:30;1031:68;;;;-1:-1:-1;;;1031:68:36;;13622:2:37;1031:68:36;;;13604:21:37;13661:2;13641:18;;;13634:30;13700:27;13680:18;;;13673:55;13745:18;;1031:68:36;13420:349:37;2778:146:6;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1631:539:36;1676:18;:16;:18::i;:::-;1732:6;;1770:8;;1756:23;;-1:-1:-1;;;1756:23:36;;-1:-1:-1;;;;;1770:8:36;;;1756:23;;;4464:51:37;1732:6:36;;:14;;1756:13;;;;4437:18:37;;1756:23:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1789:2:36;;1833:6;;1811:29;;-1:-1:-1;;;1811:29:36;;-1:-1:-1;;;;;1833:6:36;;;1811:29;;;4464:51:37;1789:2:36;;;-1:-1:-1;1789:21:36;;-1:-1:-1;1789:2:36;;1811:21;;4437:18:37;;1811:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1811:29:36;;;;;;;;;;;;:::i;:::-;1841:1;1811:32;;;;;;;;:::i;:::-;;;;;;;1789:55;;;;;;;;;;;;;7457:25:37;;7445:2;7430:18;;7311:177;1789:55:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1882:6:36;;-1:-1:-1;;;;;1882:6:36;:14;;-1:-1:-1;1914:36:36;;-1:-1:-1;1933:17:36;1882:14;1914:36;:::i;:::-;1954:7;1914:47;1906:81;;;;-1:-1:-1;;;1906:81:36;;13976:2:37;1906:81:36;;;13958:21:37;14015:2;13995:18;;;13988:30;-1:-1:-1;;;14034:18:37;;;14027:51;14095:18;;1906:81:36;13774:345:37;1906:81:36;2005:2;;2019:6;;2005:21;;-1:-1:-1;;;2005:21:36;;-1:-1:-1;;;;;2019:6:36;;;2005:21;;;4464:51:37;2005:2:36;;;:13;;4437:18:37;;2005:21:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2030:7;2005:32;1997:69;;;;-1:-1:-1;;;1997:69:36;;14326:2:37;1997:69:36;;;14308:21:37;14365:2;14345:18;;;14338:30;-1:-1:-1;;;14384:18:37;;;14377:54;14448:18;;1997:69:36;14124:348:37;1997:69:36;2084:2;;2098:6;;2084:21;;-1:-1:-1;;;2084:21:36;;-1:-1:-1;;;;;2098:6:36;;;2084:21;;;4464:51:37;2084:2:36;;;:13;;4437:18:37;;2084:21:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;;2109:2;2084:27;2076:63;;;;-1:-1:-1;;;2076:63:36;;14888:2:37;2076:63:36;;;14870:21:37;14927:2;14907:18;;;14900:30;-1:-1:-1;;;14946:18:37;;;14939:53;15009:18;;2076:63:36;14686:347:37;2076:63:36;317:28:1;309:37;;-1:-1:-1;;;;;2149:12:36;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:504;;1631:539::o;2176:730::-;2217:18;:16;:18::i;:::-;2273:6;;2324:8;;2350:23;;-1:-1:-1;;;2350:23:36;;-1:-1:-1;;;;;2324:8:36;;;2350:23;;;4464:51:37;;;2273:6:36;;;;:14;;2324:16;;;2350:13;;;;4437:18:37;;2350:23:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2383:2:36;;2427:6;;2405:29;;-1:-1:-1;;;2405:29:36;;-1:-1:-1;;;;;2427:6:36;;;2405:29;;;4464:51:37;2383:2:36;;;-1:-1:-1;2383:21:36;;-1:-1:-1;2383:2:36;;2405:21;;4437:18:37;;2405:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2405:29:36;;;;;;;;;;;;:::i;:::-;2435:1;2405:32;;;;;;;;:::i;:::-;;;;;;;2383:55;;;;;;;;;;;;;7457:25:37;;7445:2;7430:18;;7311:177;2383:55:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2476:6:36;;2526:8;;-1:-1:-1;;;;;2476:6:36;;;:14;;-1:-1:-1;2526:8:36;:16;;-1:-1:-1;2560:34:36;2578:16;2526;2560:34;:::i;:::-;2598:7;2560:45;2552:87;;;;-1:-1:-1;;;2552:87:36;;15240:2:37;2552:87:36;;;15222:21:37;15279:2;15259:18;;;15252:30;15318:31;15298:18;;;15291:59;15367:18;;2552:87:36;15038:353:37;2552:87:36;2677:17;2657:16;:37;2649:79;;;;-1:-1:-1;;;2649:79:36;;15240:2:37;2649:79:36;;;15222:21:37;15279:2;15259:18;;;15252:30;15318:31;15298:18;;;15291:59;15367:18;;2649:79:36;15038:353:37;2649:79:36;2746:2;;2760:6;;2746:21;;-1:-1:-1;;;2746:21:36;;-1:-1:-1;;;;;2760:6:36;;;2746:21;;;4464:51:37;2746:2:36;;;:13;;4437:18:37;;2746:21:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:26;2738:63;;;;-1:-1:-1;;;2738:63:36;;14326:2:37;2738:63:36;;;14308:21:37;14365:2;14345:18;;;14338:30;-1:-1:-1;;;14384:18:37;;;14377:54;14448:18;;2738:63:36;14124:348:37;2738:63:36;2819:2;;2833:6;;2819:21;;-1:-1:-1;;;2819:21:36;;-1:-1:-1;;;;;2833:6:36;;;2819:21;;;4464:51:37;2819:2:36;;;:13;;4437:18:37;;2819:21:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:28;;-1:-1:-1;;2819:28:36;2811:64;;;;-1:-1:-1;;;2811:64:36;;14888:2:37;2811:64:36;;;14870:21:37;14927:2;14907:18;;;14900:30;-1:-1:-1;;;14946:18:37;;;14939:53;15009:18;;2811:64:36;14686:347:37;2811:64:36;317:28:1;309:37;;-1:-1:-1;;;;;2885:12:36;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:699;;;;2176:730::o;1866:141:6:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4081:51:37;;;-1:-1:-1;;;4148:18:37;;;4141:34;2196:43:0;;;;;;;;;4054:18:37;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;671:243:35:-;733:2;;:17;;;-1:-1:-1;;;733:17:35;;;;714:16;;-1:-1:-1;;;;;733:2:35;;:15;;:17;;;;;;;;;;;;;;:2;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;714:36;-1:-1:-1;769:13:35;;761:48;;;;-1:-1:-1;;;761:48:35;;16840:2:37;761:48:35;;;16822:21:37;16879:2;16859:18;;;16852:30;-1:-1:-1;;;16898:18:37;;;16891:52;16960:18;;761:48:35;16638:346:37;761:48:35;827:2;;:11;;;-1:-1:-1;;;827:11:35;;;;-1:-1:-1;;;842:43:35;-1:-1:-1;;;;;827:2:35;;:9;;:11;;;;;;;;;;;;;;:2;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;827:58:35;;819:88;;;;-1:-1:-1;;;819:88:35;;17404:2:37;819:88:35;;;17386:21:37;17443:2;17423:18;;;17416:30;-1:-1:-1;;;17462:18:37;;;17455:47;17519:18;;819:88:35;17202:341:37;819:88:35;704:210;671:243::o;274:377:36:-;336:6;;360:16;;-1:-1:-1;;;360:16:36;;-1:-1:-1;;;;;336:6:36;;;360:16;;;4464:51:37;;;336:14:36;;360:8;;;;4437:18:37;;360:16:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;386:2:36;;:60;;-1:-1:-1;;;386:60:36;;-1:-1:-1;;;;;386:2:36;;;;-1:-1:-1;386:12:36;;-1:-1:-1;406:7:36;;386:60;;-1:-1:-1;;;415:8:36;425:5;;432:7;;441:4;;386:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;464:2;;;;;;;;;-1:-1:-1;;;;;464:2:36;-1:-1:-1;;;;;464:15:36;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;485:1;464:22;456:68;;;;-1:-1:-1;;;456:68:36;;19836:2:37;456:68:36;;;19818:21:37;19875:2;19855:18;;;19848:30;19914:34;19894:18;;;19887:62;-1:-1:-1;;;19965:18:37;;;19958:31;20006:19;;456:68:36;19634:397:37;456:68:36;553:6;;-1:-1:-1;;;;;553:6:36;:14;585:19;553:14;585:8;:19;:::i;:::-;608:7;585:30;577:67;;;;-1:-1:-1;;;577:67:36;;20238:2:37;577:67:36;;;20220:21:37;20277:2;20257:18;;;20250:30;20316:26;20296:18;;;20289:54;20360:18;;577:67:36;20036:348:37;577:67:36;307:344;;274:377::o;2013:142:6:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:6;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;180:658:37:-;351:2;403:21;;;473:13;;376:18;;;495:22;;;322:4;;351:2;574:15;;;;548:2;533:18;;;322:4;617:195;631:6;628:1;625:13;617:195;;;696:13;;-1:-1:-1;;;;;692:39:37;680:52;;787:15;;;;752:12;;;;728:1;646:9;617:195;;;-1:-1:-1;829:3:37;;180:658;-1:-1:-1;;;;;;180:658:37:o;843:1567::-;1045:4;1074:2;1114;1103:9;1099:18;1144:2;1133:9;1126:21;1167:6;1202;1196:13;1233:6;1225;1218:22;1259:2;1249:12;;1292:2;1281:9;1277:18;1270:25;;1354:2;1344:6;1341:1;1337:14;1326:9;1322:30;1318:39;1392:2;1384:6;1380:15;1413:1;1434;1444:937;1460:6;1455:3;1452:15;1444:937;;;1529:22;;;-1:-1:-1;;1525:36:37;1513:49;;1585:13;;1672:9;;-1:-1:-1;;;;;1668:35:37;1653:51;;1743:11;;1737:18;1775:15;;;1768:27;;;1856:19;;1625:15;;;1888:24;;;1978:21;;;;2023:1;;1946:2;1934:15;;;2037:236;2053:8;2048:3;2045:17;2037:236;;;2134:15;;-1:-1:-1;;;;;;2130:42:37;2116:57;;2242:17;;;;2081:1;2072:11;;;;;2199:14;;;;2037:236;;;-1:-1:-1;2359:12:37;;;;2296:5;-1:-1:-1;;;2324:15:37;;;;1486:1;1477:11;1444:937;;;-1:-1:-1;2398:6:37;;843:1567;-1:-1:-1;;;;;;;;;843:1567:37:o;2415:250::-;2500:1;2510:113;2524:6;2521:1;2518:13;2510:113;;;2600:11;;;2594:18;2581:11;;;2574:39;2546:2;2539:10;2510:113;;;-1:-1:-1;;2657:1:37;2639:16;;2632:27;2415:250::o;2670:1014::-;2832:4;2861:2;2901;2890:9;2886:18;2931:2;2920:9;2913:21;2954:6;2989;2983:13;3020:6;3012;3005:22;3058:2;3047:9;3043:18;3036:25;;3120:2;3110:6;3107:1;3103:14;3092:9;3088:30;3084:39;3070:53;;3158:2;3150:6;3146:15;3179:1;3189:466;3203:6;3200:1;3197:13;3189:466;;;3268:22;;;-1:-1:-1;;3264:36:37;3252:49;;3324:13;;3366:9;;3388:24;;;3425:74;3366:9;3473:15;;;3460:11;;;3425:74;:::i;:::-;3565:2;3542:17;-1:-1:-1;;3538:31:37;3526:44;;;;3522:53;;;-1:-1:-1;3633:12:37;;;;3598:15;;;;3225:1;3218:9;3189:466;;;-1:-1:-1;3672:6:37;;2670:1014;-1:-1:-1;;;;;;;2670:1014:37:o;4186:127::-;4247:10;4242:3;4238:20;4235:1;4228:31;4278:4;4275:1;4268:15;4302:4;4299:1;4292:15;4526:255;4598:2;4592:9;4640:6;4628:19;;4677:18;4662:34;;4698:22;;;4659:62;4656:88;;;4724:18;;:::i;:::-;4760:2;4753:22;4526:255;:::o;4786:275::-;4857:2;4851:9;4922:2;4903:13;;-1:-1:-1;;4899:27:37;4887:40;;4957:18;4942:34;;4978:22;;;4939:62;4936:88;;;5004:18;;:::i;:::-;5040:2;5033:22;4786:275;;-1:-1:-1;4786:275:37:o;5066:936::-;5161:6;5192:2;5235;5223:9;5214:7;5210:23;5206:32;5203:52;;;5251:1;5248;5241:12;5203:52;5284:9;5278:16;5313:18;5354:2;5346:6;5343:14;5340:34;;;5370:1;5367;5360:12;5340:34;5408:6;5397:9;5393:22;5383:32;;5453:7;5446:4;5442:2;5438:13;5434:27;5424:55;;5475:1;5472;5465:12;5424:55;5504:2;5498:9;5526:2;5522;5519:10;5516:36;;;5532:18;;:::i;:::-;5578:2;5575:1;5571:10;5561:20;;5601:28;5625:2;5621;5617:11;5601:28;:::i;:::-;5663:15;;;5733:11;;;5729:20;;;5694:12;;;;5761:19;;;5758:39;;;5793:1;5790;5783:12;5758:39;5817:11;;;;5837:135;5853:6;5848:3;5845:15;5837:135;;;5919:10;;5907:23;;5870:12;;;;5950;;;;5837:135;;;5991:5;5066:936;-1:-1:-1;;;;;;;;5066:936:37:o;6007:127::-;6068:10;6063:3;6059:20;6056:1;6049:31;6099:4;6096:1;6089:15;6123:4;6120:1;6113:15;6139:1167;6405:2;6417:21;;;6487:13;;6390:18;;;6509:22;;;6357:4;;6584;;6562:2;6547:18;;;6611:15;;;6357:4;6654:186;6668:6;6665:1;6662:13;6654:186;;;6733:13;;6748:10;6729:30;6717:43;;6780:12;;;;6815:15;;;;6690:1;6683:9;6654:186;;;-1:-1:-1;;;6876:19:37;;;6856:18;;;6849:47;6946:13;;6968:21;;;7044:15;;;;7007:12;;;7079:1;7089:189;7105:8;7100:3;7097:17;7089:189;;;7174:15;;7160:30;;7251:17;;;;7212:14;;;;7133:1;7124:11;7089:189;;;-1:-1:-1;7295:5:37;;6139:1167;-1:-1:-1;;;;;;;6139:1167:37:o;7493:151::-;7576:13;;7618:1;7608:12;;7598:40;;7634:1;7631;7624:12;7649:160;7726:13;;7779:4;7768:16;;7758:27;;7748:55;;7799:1;7796;7789:12;7814:167;7892:13;;7945:10;7934:22;;7924:33;;7914:61;;7971:1;7968;7961:12;7986:164;8063:13;;8116:1;8105:20;;;8095:31;;8085:59;;8140:1;8137;8130:12;8155:177;8234:13;;-1:-1:-1;;;;;8276:31:37;;8266:42;;8256:70;;8322:1;8319;8312:12;8337:510;8391:5;8444:3;8437:4;8429:6;8425:17;8421:27;8411:55;;8462:1;8459;8452:12;8411:55;8491:6;8485:13;8517:18;8513:2;8510:26;8507:52;;;8539:18;;:::i;:::-;8583:55;8626:2;8607:13;;-1:-1:-1;;8603:27:37;8632:4;8599:38;8583:55;:::i;:::-;8663:2;8654:7;8647:19;8709:3;8702:4;8697:2;8689:6;8685:15;8681:26;8678:35;8675:55;;;8726:1;8723;8716:12;8675:55;8739:77;8813:2;8806:4;8797:7;8793:18;8786:4;8778:6;8774:17;8739:77;:::i;:::-;8834:7;8337:510;-1:-1:-1;;;;8337:510:37:o;8852:197::-;8931:13;;-1:-1:-1;;;;;;8973:51:37;;8963:62;;8953:90;;9039:1;9036;9029:12;9054:192;9133:13;;-1:-1:-1;;;;;9175:46:37;;9165:57;;9155:85;;9236:1;9233;9226:12;9251:1716;9344:6;9397:2;9385:9;9376:7;9372:23;9368:32;9365:52;;;9413:1;9410;9403:12;9365:52;9446:9;9440:16;9475:18;9516:2;9508:6;9505:14;9502:34;;;9532:1;9529;9522:12;9502:34;9555:22;;;;9611:6;9593:16;;;9589:29;9586:49;;;9631:1;9628;9621:12;9586:49;9657:22;;:::i;:::-;9702:37;9736:2;9702:37;:::i;:::-;9695:5;9688:52;9772:40;9808:2;9804;9800:11;9772:40;:::i;:::-;9767:2;9760:5;9756:14;9749:64;9845:41;9882:2;9878;9874:11;9845:41;:::i;:::-;9840:2;9833:5;9829:14;9822:65;9919:41;9956:2;9952;9948:11;9919:41;:::i;:::-;9914:2;9907:5;9903:14;9896:65;9994:41;10030:3;10026:2;10022:12;9994:41;:::i;:::-;9988:3;9981:5;9977:15;9970:66;10069:43;10107:3;10103:2;10099:12;10069:43;:::i;:::-;10063:3;10056:5;10052:15;10045:68;10152:3;10148:2;10144:12;10138:19;10182:2;10172:8;10169:16;10166:36;;;10198:1;10195;10188:12;10166:36;10235:56;10283:7;10272:8;10268:2;10264:17;10235:56;:::i;:::-;10229:3;10222:5;10218:15;10211:81;;10331:3;10327:2;10323:12;10317:19;10361:2;10351:8;10348:16;10345:36;;;10377:1;10374;10367:12;10345:36;10414:56;10462:7;10451:8;10447:2;10443:17;10414:56;:::i;:::-;10408:3;10401:5;10397:15;10390:81;;10490:3;10532:2;10528;10524:11;10518:18;10561:2;10551:8;10548:16;10545:36;;;10577:1;10574;10567:12;10545:36;10613:56;10661:7;10650:8;10646:2;10642:17;10613:56;:::i;:::-;10608:2;10601:5;10597:14;10590:80;;;10689:3;10679:13;;10724:42;10762:2;10758;10754:11;10724:42;:::i;:::-;10719:2;10712:5;10708:14;10701:66;10786:3;10776:13;;10821:42;10859:2;10855;10851:11;10821:42;:::i;:::-;10805:14;;;10798:66;;;;10883:3;10924:11;;;10918:18;10902:14;;;10895:42;;;;10809:5;9251:1716;-1:-1:-1;;;9251:1716:37:o;11327:127::-;11388:10;11383:3;11379:20;11376:1;11369:31;11419:4;11416:1;11409:15;11443:4;11440:1;11433:15;11812:380;11891:1;11887:12;;;;11934;;;11955:61;;12009:4;12001:6;11997:17;11987:27;;11955:61;12062:2;12054:6;12051:14;12031:18;12028:38;12025:161;;12108:10;12103:3;12099:20;12096:1;12089:31;12143:4;12140:1;12133:15;12171:4;12168:1;12161:15;12025:161;;11812:380;;;:::o;12593:184::-;12663:6;12716:2;12704:9;12695:7;12691:23;12687:32;12684:52;;;12732:1;12729;12722:12;12684:52;-1:-1:-1;12755:16:37;;12593:184;-1:-1:-1;12593:184:37:o;13190:225::-;13257:9;;;13278:11;;;13275:134;;;13331:10;13326:3;13322:20;13319:1;13312:31;13366:4;13363:1;13356:15;13394:4;13391:1;13384:15;13275:134;13190:225;;;;:::o;14477:204::-;14545:6;14598:2;14586:9;14577:7;14573:23;14569:32;14566:52;;;14614:1;14611;14604:12;14566:52;14637:38;14665:9;14637:38;:::i;:::-;14627:48;14477:204;-1:-1:-1;;;14477:204:37:o;15675:384::-;-1:-1:-1;;;;;;15860:33:37;;15848:46;;15917:13;;15830:3;;15939:74;15917:13;16002:1;15993:11;;15986:4;15974:17;;15939:74;:::i;:::-;16033:16;;;;16051:1;16029:24;;15675:384;-1:-1:-1;;;15675:384:37:o;16064:287::-;16193:3;16231:6;16225:13;16247:66;16306:6;16301:3;16294:4;16286:6;16282:17;16247:66;:::i;:::-;16329:16;;;;;16064:287;-1:-1:-1;;16064:287:37:o;16356:277::-;16423:6;16476:2;16464:9;16455:7;16451:23;16447:32;16444:52;;;16492:1;16489;16482:12;16444:52;16524:9;16518:16;16577:5;16570:13;16563:21;16556:5;16553:32;16543:60;;16599:1;16596;16589:12;16989:208;17059:6;17112:2;17100:9;17091:7;17087:23;17083:32;17080:52;;;17128:1;17125;17118:12;17080:52;17151:40;17181:9;17151:40;:::i;17674:1081::-;17759:12;;17724:3;;17814:1;17834:18;;;;17887;;;;17914:61;;17968:4;17960:6;17956:17;17946:27;;17914:61;17994:2;18042;18034:6;18031:14;18011:18;18008:38;18005:161;;18088:10;18083:3;18079:20;18076:1;18069:31;18123:4;18120:1;18113:15;18151:4;18148:1;18141:15;18005:161;112:19;;;164:4;155:14;;18263:18;18290:132;;;;18436:1;18431:318;;;;18256:493;;18290:132;-1:-1:-1;;18325:24:37;;18311:39;;18395:14;;18388:22;18385:1;18381:30;18370:42;;;-1:-1:-1;18290:132:37;;18431:318;17621:1;17614:14;;;17658:4;17645:18;;18525:1;18539:167;18553:6;18550:1;18547:13;18539:167;;;18633:14;;18618:13;;;18611:37;18676:16;;;;18568:10;;18539:167;;;18726:13;;;-1:-1:-1;;18256:493:37;;;;;;;;17674:1081;;;;:::o;18760:680::-;-1:-1:-1;;;;;19036:39:37;19028:6;19024:52;19013:9;19006:71;19113:3;19108:2;19097:9;19093:18;19086:31;18987:4;19140:54;19189:3;19178:9;19174:19;19166:6;19140:54;:::i;:::-;19242:9;19234:6;19230:22;19225:2;19214:9;19210:18;19203:50;19276:41;19310:6;19302;19276:41;:::i;:::-;19262:55;;19365:9;19357:6;19353:22;19348:2;19337:9;19333:18;19326:50;19393:41;19427:6;19419;19393:41;:::i;:::-;19385:49;18760:680;-1:-1:-1;;;;;;;18760:680:37:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testAddingLeak()": "bd23c4bb",
    "testCancelLeak()": "867f9350",
    "testEvaluateLeak()": "2cf15649",
    "testFakeLeak()": "b54195a2",
    "testLeakVerified()": "9892fbc6",
    "testSetup()": "bca86986"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddingLeak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCancelLeak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEvaluateLeak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFakeLeak\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testLeakVerified\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSetup\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MainContract/TestLeak.sol\":\"TestLeak\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/\",\":@sismo-core/hydra-s2/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hydra-s2-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/\",\":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\",\":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d\",\"dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07\",\"dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c\",\"dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol\":{\"keccak256\":\"0xa76e685b90c0ec1748bfc7568f3234ed5f0e1f053501a47124956fee129bbc5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efed9af69af3422d916a8c95e9ed405992c3142a92e9a3cb4e607d333cc32d5a\",\"dweb:/ipfs/Qme7FfoLLNHWT5cL7iDXaEUFmnsXRMwRXjtoq4LF9hkNtZ\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol\":{\"keccak256\":\"0x5b1f1b220b6a879e4794f6ab54e90b79d84448b6ae282c3b2b249b42a941c575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b989b364009f88a2ddb758ebaaadf893fe79f4df7959fcebd0abda8d95ffdfe\",\"dweb:/ipfs/QmSbwQQHVEKZuT25uiRVWs9WtEC8We6xthoKQHpvmuwPAp\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol\":{\"keccak256\":\"0x9b4fdfd005815eeb1005dd5fda5965c468dd01cdb1776ca343fb6229d199096a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9d5e050d3f3ea434dac6ba9f669c1ba12270ce5c8ef42a8bb4230ad69d36c1b\",\"dweb:/ipfs/QmNmY22T8dxryQ6fPdEodcqBhTXdTh51zV9wUzUPpeJH5N\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol\":{\"keccak256\":\"0x0057d68d58ac241cb3a58b849d7431091343423b1ec335caa4d28f5776d78ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e982d28a1755b8fdd48423a3eac9ed69f2f5bb603ef2a09cbab6766e41b24442\",\"dweb:/ipfs/QmNVdS4BtpNJMxYRNqDB6JreaW5uQaBEyTR4BDkL7DVNdz\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol\":{\"keccak256\":\"0xa8ebab473db1186a9118d5c6d498fac44d3dd05cfe3a2443cfdf4041236c7ac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f731db479a72e6d7eda58736cf95e6d5da7dc3990714bd01a70252d0f30003a5\",\"dweb:/ipfs/QmawaTFTdz8RPGpQGj1DUijMUviTdstiLMv84Vn9YRCAC6\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol\":{\"keccak256\":\"0x7d7935ef054b8ef2e6a99e1b7e6aa8bab55e4ba7cc55fc74aa2f206d66c56ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67a928e18192e1b98bd81ba3f6eb8cc931d5b77462e62ca038fbe2bfa11df8b2\",\"dweb:/ipfs/QmUQFKhHBeNURhdXWfw6M1C1PiFX1eLmCzGnKu7Nur6S5a\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol\":{\"keccak256\":\"0x703ca2c53b3e05ef34a5f1f5b8575267ab20dd20378178403f21ae1d832ba7a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de19c6cc0c4d84f070186f6e66eef5ac576bf71aa238966e3968b7d91c4ed679\",\"dweb:/ipfs/QmWy2hjkPu7QXvDgeHdA23EroyMfw8E773VmxNbeQ19aVw\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol\":{\"keccak256\":\"0x666f7e6c78eb9478790ff290780f11374db0333a9f88914592b25386e924cda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bb56d30e78ccb9d121a9f1023244ea2af0877fc9503a3b8db068a50730031fb\",\"dweb:/ipfs/QmdzfGvxMxf2CCTr5vqV1YP4VvchhczcT1VNeZzqQHKJTP\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092\",\"dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS2Verifier.sol\":{\"keccak256\":\"0x184f4691fc2b0a8dc77c74e9ebda5be9029b4e6f3aee396b95fa7b41b93d90d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf6deaaa08759d94fb33dd614d8610cec1c13f1b6cf61a46e22e02aace20d1a\",\"dweb:/ipfs/QmU32LptYUkidVdZNMhnGdvrJxg62c1MG1zWAWQzERJQMG\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol\":{\"keccak256\":\"0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134\",\"dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu\"]},\"src/BlockLeaks.sol\":{\"keccak256\":\"0x70ff608bed6322cb1ade0eb936cfd9fbc756c13259b610f3b8d936a0e761aec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5965849614f599ac4db2bc8f7846c2c09b9b8c58fcfdce71b59617b2cfd93bc8\",\"dweb:/ipfs/QmXhgtHeEJrmaVURHrzD5NHTdaFUkcgCLufALeKFTvsQWr\"]},\"test/BlockLeaks.t.sol\":{\"keccak256\":\"0x082b4cabb7c73f272be3f3161aa8d60a3c398d84e869580e93ee7845fe959342\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d8e79a635b1bf90fe635b2a55066728a4b3032aa0a1c96f8172e8fb2c2624852\",\"dweb:/ipfs/QmP4sK5VfMwfN9TZ4yw97sQqmhd5dGbtDAWuR1UCARgnUC\"]},\"test/MainContract/TestLeak.sol\":{\"keccak256\":\"0x21ab0f44a7a99150b56342a15a9a2874f3997add049fff27a4e2c4d8016d1545\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b3961e55fae7462d4b6eeb24558839ca1ef19c9b8d7aa138866790a762f34914\",\"dweb:/ipfs/QmNwYhpC6we3SDyaCRNXwwSZm9NV3mEb6zCnxCYoQ9qDGy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddingLeak"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCancelLeak"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEvaluateLeak"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFakeLeak"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testLeakVerified"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testSetup"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/",
        ":@sismo-core/hydra-s2/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":hydra-s2-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s2-zkps/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/",
        ":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/",
        ":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MainContract/TestLeak.sol": "TestLeak"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0e6f32877ab26a83c9334eb5a000bf326bd2a0b04fea8647e045cea9c445f534",
        "urls": [
          "bzz-raw://8965978bfa66ddab8db95449a96ee47d44c62ebcb4271ab293e847f359a2ba7d",
          "dweb:/ipfs/QmazxpekoHnno4ySoNUct7NcKx6UJR7UvcMtJ9JYsBDEUh"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xce33e7c67d273bd32e324c347a5fc7b8815fb7d4880a1bc6569409b2e91f0017",
        "urls": [
          "bzz-raw://91a2c8facd01ee5242135a4f1b368f99fc087574c2b8ebb3e2bdec9af8be0e07",
          "dweb:/ipfs/QmStG1wYSPXMEirv9nsA9p4EjzGRtoH999czMxGMj8KHhM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x06f0761a502a8dc74c06029c603831780ff32f1e85dad2ae0f810b7545fba09b",
        "urls": [
          "bzz-raw://70e940ed53ef0270d1d6f3215fcccf92dd675f8ec4a59e1fbd0535e0d52fb46c",
          "dweb:/ipfs/QmPTkXXzGKFyWBmbQPrL6Yg4ECWmu3LndSH9ex2E3czZuF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol": {
        "keccak256": "0xa76e685b90c0ec1748bfc7568f3234ed5f0e1f053501a47124956fee129bbc5d",
        "urls": [
          "bzz-raw://efed9af69af3422d916a8c95e9ed405992c3142a92e9a3cb4e607d333cc32d5a",
          "dweb:/ipfs/Qme7FfoLLNHWT5cL7iDXaEUFmnsXRMwRXjtoq4LF9hkNtZ"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol": {
        "keccak256": "0x5b1f1b220b6a879e4794f6ab54e90b79d84448b6ae282c3b2b249b42a941c575",
        "urls": [
          "bzz-raw://1b989b364009f88a2ddb758ebaaadf893fe79f4df7959fcebd0abda8d95ffdfe",
          "dweb:/ipfs/QmSbwQQHVEKZuT25uiRVWs9WtEC8We6xthoKQHpvmuwPAp"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol": {
        "keccak256": "0x9b4fdfd005815eeb1005dd5fda5965c468dd01cdb1776ca343fb6229d199096a",
        "urls": [
          "bzz-raw://c9d5e050d3f3ea434dac6ba9f669c1ba12270ce5c8ef42a8bb4230ad69d36c1b",
          "dweb:/ipfs/QmNmY22T8dxryQ6fPdEodcqBhTXdTh51zV9wUzUPpeJH5N"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol": {
        "keccak256": "0x0057d68d58ac241cb3a58b849d7431091343423b1ec335caa4d28f5776d78ec6",
        "urls": [
          "bzz-raw://e982d28a1755b8fdd48423a3eac9ed69f2f5bb603ef2a09cbab6766e41b24442",
          "dweb:/ipfs/QmNVdS4BtpNJMxYRNqDB6JreaW5uQaBEyTR4BDkL7DVNdz"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol": {
        "keccak256": "0xa8ebab473db1186a9118d5c6d498fac44d3dd05cfe3a2443cfdf4041236c7ac1",
        "urls": [
          "bzz-raw://f731db479a72e6d7eda58736cf95e6d5da7dc3990714bd01a70252d0f30003a5",
          "dweb:/ipfs/QmawaTFTdz8RPGpQGj1DUijMUviTdstiLMv84Vn9YRCAC6"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol": {
        "keccak256": "0x7d7935ef054b8ef2e6a99e1b7e6aa8bab55e4ba7cc55fc74aa2f206d66c56ee6",
        "urls": [
          "bzz-raw://67a928e18192e1b98bd81ba3f6eb8cc931d5b77462e62ca038fbe2bfa11df8b2",
          "dweb:/ipfs/QmUQFKhHBeNURhdXWfw6M1C1PiFX1eLmCzGnKu7Nur6S5a"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol": {
        "keccak256": "0x703ca2c53b3e05ef34a5f1f5b8575267ab20dd20378178403f21ae1d832ba7a7",
        "urls": [
          "bzz-raw://de19c6cc0c4d84f070186f6e66eef5ac576bf71aa238966e3968b7d91c4ed679",
          "dweb:/ipfs/QmWy2hjkPu7QXvDgeHdA23EroyMfw8E773VmxNbeQ19aVw"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol": {
        "keccak256": "0x666f7e6c78eb9478790ff290780f11374db0333a9f88914592b25386e924cda3",
        "urls": [
          "bzz-raw://9bb56d30e78ccb9d121a9f1023244ea2af0877fc9503a3b8db068a50730031fb",
          "dweb:/ipfs/QmdzfGvxMxf2CCTr5vqV1YP4VvchhczcT1VNeZzqQHKJTP"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol": {
        "keccak256": "0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e",
        "urls": [
          "bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092",
          "dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS2Verifier.sol": {
        "keccak256": "0x184f4691fc2b0a8dc77c74e9ebda5be9029b4e6f3aee396b95fa7b41b93d90d3",
        "urls": [
          "bzz-raw://ddf6deaaa08759d94fb33dd614d8610cec1c13f1b6cf61a46e22e02aace20d1a",
          "dweb:/ipfs/QmU32LptYUkidVdZNMhnGdvrJxg62c1MG1zWAWQzERJQMG"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol": {
        "keccak256": "0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0",
        "urls": [
          "bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134",
          "dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu"
        ],
        "license": "MIT"
      },
      "src/BlockLeaks.sol": {
        "keccak256": "0x70ff608bed6322cb1ade0eb936cfd9fbc756c13259b610f3b8d936a0e761aec9",
        "urls": [
          "bzz-raw://5965849614f599ac4db2bc8f7846c2c09b9b8c58fcfdce71b59617b2cfd93bc8",
          "dweb:/ipfs/QmXhgtHeEJrmaVURHrzD5NHTdaFUkcgCLufALeKFTvsQWr"
        ],
        "license": "MIT"
      },
      "test/BlockLeaks.t.sol": {
        "keccak256": "0x082b4cabb7c73f272be3f3161aa8d60a3c398d84e869580e93ee7845fe959342",
        "urls": [
          "bzz-raw://d8e79a635b1bf90fe635b2a55066728a4b3032aa0a1c96f8172e8fb2c2624852",
          "dweb:/ipfs/QmP4sK5VfMwfN9TZ4yw97sQqmhd5dGbtDAWuR1UCARgnUC"
        ],
        "license": "UNLICENSED"
      },
      "test/MainContract/TestLeak.sol": {
        "keccak256": "0x21ab0f44a7a99150b56342a15a9a2874f3997add049fff27a4e2c4d8016d1545",
        "urls": [
          "bzz-raw://b3961e55fae7462d4b6eeb24558839ca1ef19c9b8d7aa138866790a762f34914",
          "dweb:/ipfs/QmNwYhpC6we3SDyaCRNXwwSZm9NV3mEb6zCnxCYoQ9qDGy"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MainContract/TestLeak.sol",
    "id": 37126,
    "exportedSymbols": {
      "Address": [
        29895
      ],
      "Auth": [
        35408
      ],
      "AuthRequest": [
        35362
      ],
      "AuthRequestBuilder": [
        33324
      ],
      "AuthType": [
        35390
      ],
      "BlockLeaks": [
        36669
      ],
      "BlockLeaksTest": [
        36762
      ],
      "BlockLeaksVault": [
        35691
      ],
      "Claim": [
        35422
      ],
      "ClaimRequest": [
        35378
      ],
      "ClaimRequestBuilder": [
        33971
      ],
      "ClaimType": [
        35396
      ],
      "DSTest": [
        2291
      ],
      "EnumerableSet": [
        30508
      ],
      "GROUP_ID": [
        36676
      ],
      "GROUP_ID_2": [
        36679
      ],
      "IAddressesProvider": [
        35570
      ],
      "IBlockLeaks": [
        36690
      ],
      "IERC20": [
        29248
      ],
      "IERC20Permit": [
        29284
      ],
      "IHydraS2Verifier": [
        35643
      ],
      "ISismoConnectVerifier": [
        30559
      ],
      "Leak": [
        35678
      ],
      "ReentrancyGuard": [
        29170
      ],
      "RequestBuilder": [
        35077
      ],
      "SafeERC20": [
        29565
      ],
      "Signature": [
        35427
      ],
      "SignatureBuilder": [
        35203
      ],
      "SignatureRequest": [
        35385
      ],
      "SismoConnect": [
        32866
      ],
      "SismoConnectHelper": [
        35330
      ],
      "SismoConnectRequest": [
        35348
      ],
      "SismoConnectResponse": [
        35440
      ],
      "SismoConnectVerifiedResult": [
        35472
      ],
      "Status": [
        35683
      ],
      "StdAssertions": [
        3781
      ],
      "StdChains": [
        4475
      ],
      "StdCheats": [
        6751
      ],
      "StdInvariant": [
        7041
      ],
      "StdStorage": [
        7791
      ],
      "StdStyle": [
        10435
      ],
      "StdUtils": [
        11262
      ],
      "Test": [
        11311
      ],
      "TestBase": [
        2351
      ],
      "TestLeak": [
        37125
      ],
      "VerifiedAuth": [
        35484
      ],
      "VerifiedClaim": [
        35500
      ],
      "Vm": [
        12793
      ],
      "console": [
        20857
      ],
      "console2": [
        28953
      ],
      "stdError": [
        6817
      ],
      "stdJson": [
        7617
      ],
      "stdMath": [
        7759
      ],
      "stdStorage": [
        9224
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2870:36",
    "nodes": [
      {
        "id": 36764,
        "nodeType": "PragmaDirective",
        "src": "39:24:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 36765,
        "nodeType": "ImportDirective",
        "src": "65:28:36",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37126,
        "sourceUnit": 11312,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36766,
        "nodeType": "ImportDirective",
        "src": "95:29:36",
        "nodes": [],
        "absolutePath": "test/BlockLeaks.t.sol",
        "file": "../BlockLeaks.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37126,
        "sourceUnit": 36763,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37125,
        "nodeType": "ContractDefinition",
        "src": "126:2782:36",
        "nodes": [
          {
            "id": 36771,
            "nodeType": "VariableDeclaration",
            "src": "168:26:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "title",
            "nameLocation": "175:5:36",
            "scope": 37125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36769,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "168:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5469746c6554657374",
              "id": 36770,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "183:11:36",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c618fe08040d4f14e290cc665cd0b50e84dfefa00eaa27ce142faff215a3e148",
                "typeString": "literal_string \"TitleTest\""
              },
              "value": "TitleTest"
            },
            "visibility": "internal"
          },
          {
            "id": 36774,
            "nodeType": "VariableDeclaration",
            "src": "200:30:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "content",
            "nameLocation": "207:7:36",
            "scope": 37125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36772,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "200:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "436f6e74656e7454657374",
              "id": 36773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "217:13:36",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0452ad9b5d4b342e181d09bd36d463b57e5c5315d761f569b8230bc942673669",
                "typeString": "literal_string \"ContentTest\""
              },
              "value": "ContentTest"
            },
            "visibility": "internal"
          },
          {
            "id": 36777,
            "nodeType": "VariableDeclaration",
            "src": "236:31:36",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "link",
            "nameLocation": "243:4:36",
            "scope": 37125,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 36775,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "236:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "697066733a2f2f546573744c696e6b",
              "id": 36776,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "250:17:36",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_75264325678ecaa8d0dfbd3a1d901aeef9a33955b501238b1701318012a82143",
                "typeString": "literal_string \"ipfs://TestLink\""
              },
              "value": "ipfs://TestLink"
            },
            "visibility": "internal"
          },
          {
            "id": 36826,
            "nodeType": "FunctionDefinition",
            "src": "274:377:36",
            "nodes": [],
            "body": {
              "id": 36825,
              "nodeType": "Block",
              "src": "307:344:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    36781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36781,
                      "mutability": "mutable",
                      "name": "balBefor",
                      "nameLocation": "325:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36825,
                      "src": "317:16:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36780,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "317:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36784,
                  "initialValue": {
                    "expression": {
                      "id": 36782,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "336:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "343:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "336:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "317:33:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36788,
                        "name": "LEAKER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36704,
                        "src": "369:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36785,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "360:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 36787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "363:5:36",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12406,
                      "src": "360:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 36789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "360:16:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36790,
                  "nodeType": "ExpressionStatement",
                  "src": "360:16:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36796,
                        "name": "GROUP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36676,
                        "src": "415:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 36797,
                        "name": "title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36771,
                        "src": "425:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 36798,
                        "name": "content",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36774,
                        "src": "432:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "id": 36799,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36777,
                        "src": "441:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes16",
                            "typeString": "bytes16"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          },
                          {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        ],
                        "expression": {
                          "id": 36791,
                          "name": "bl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36721,
                          "src": "386:2:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                            "typeString": "contract BlockLeaks"
                          }
                        },
                        "id": 36793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "389:9:36",
                        "memberName": "writeLeak",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36300,
                        "src": "386:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes16_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes16,string memory,string memory,string memory) payable external returns (bytes32)"
                        }
                      },
                      "id": 36795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 36794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "406:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "386:28:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes16_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$value",
                        "typeString": "function (bytes16,string memory,string memory,string memory) payable external returns (bytes32)"
                      }
                    },
                    "id": 36800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "386:60:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 36801,
                  "nodeType": "ExpressionStatement",
                  "src": "386:60:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 36803,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "464:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 36804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "467:12:36",
                            "memberName": "messageCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35711,
                            "src": "464:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 36805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "464:17:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 36806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "485:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "464:22:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c65616b206e6f7420636f756e7465642020696e206d657373616765436f756e74",
                        "id": 36808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "488:35:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_745e3c50ac3ffe2dc87a4ef3b7353df72fd9e8ac0c9861bd2037bcbb8ba2d1b3",
                          "typeString": "literal_string \"Leak not counted  in messageCount\""
                        },
                        "value": "Leak not counted  in messageCount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_745e3c50ac3ffe2dc87a4ef3b7353df72fd9e8ac0c9861bd2037bcbb8ba2d1b3",
                          "typeString": "literal_string \"Leak not counted  in messageCount\""
                        }
                      ],
                      "id": 36802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "456:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "456:68:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36810,
                  "nodeType": "ExpressionStatement",
                  "src": "456:68:36"
                },
                {
                  "assignments": [
                    36812
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36812,
                      "mutability": "mutable",
                      "name": "balAfter",
                      "nameLocation": "542:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36825,
                      "src": "534:16:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36811,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "534:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36815,
                  "initialValue": {
                    "expression": {
                      "id": 36813,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "553:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "560:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "553:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "534:33:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 36819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 36817,
                            "name": "balBefor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36781,
                            "src": "585:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 36818,
                            "name": "balAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36812,
                            "src": "596:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "585:19:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 36820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "608:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "585:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b6520616d6f756e74206e6f7420636f756e746564",
                        "id": 36822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b199ee4fe1639a25b09f22a2bb9ed132699cf2f3dc1407aac309d56d12f60042",
                          "typeString": "literal_string \"Stake amount not counted\""
                        },
                        "value": "Stake amount not counted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b199ee4fe1639a25b09f22a2bb9ed132699cf2f3dc1407aac309d56d12f60042",
                          "typeString": "literal_string \"Stake amount not counted\""
                        }
                      ],
                      "id": 36816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "577:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "577:67:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36824,
                  "nodeType": "ExpressionStatement",
                  "src": "577:67:36"
                }
              ]
            },
            "functionSelector": "bd23c4bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddingLeak",
            "nameLocation": "283:14:36",
            "parameters": {
              "id": 36778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:2:36"
            },
            "returnParameters": {
              "id": 36779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:36"
            },
            "scope": 37125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36884,
            "nodeType": "FunctionDefinition",
            "src": "657:449:36",
            "nodes": [],
            "body": {
              "id": 36883,
              "nodeType": "Block",
              "src": "690:416:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36829,
                      "name": "testAddingLeak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36826,
                      "src": "700:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:16:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36831,
                  "nodeType": "ExpressionStatement",
                  "src": "700:16:36"
                },
                {
                  "assignments": [
                    36833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36833,
                      "mutability": "mutable",
                      "name": "balBefor",
                      "nameLocation": "734:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36883,
                      "src": "726:16:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36832,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "726:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36836,
                  "initialValue": {
                    "expression": {
                      "id": 36834,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "745:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "752:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "745:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "726:33:36"
                },
                {
                  "assignments": [
                    36838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36838,
                      "mutability": "mutable",
                      "name": "leakId",
                      "nameLocation": "777:6:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36883,
                      "src": "769:14:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 36837,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "769:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36845,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [
                        {
                          "id": 36841,
                          "name": "LEAKER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36704,
                          "src": "808:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 36839,
                          "name": "bl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36721,
                          "src": "786:2:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                            "typeString": "contract BlockLeaks"
                          }
                        },
                        "id": 36840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "789:18:36",
                        "memberName": "getLeaksIDBySender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36516,
                        "src": "786:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (address) view external returns (bytes32[] memory)"
                        }
                      },
                      "id": 36842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "786:29:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "id": 36844,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 36843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "816:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "786:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:49:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36849,
                        "name": "LEAKER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36704,
                        "src": "837:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36846,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "828:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 36848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "831:5:36",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12406,
                      "src": "828:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 36850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:16:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36851,
                  "nodeType": "ExpressionStatement",
                  "src": "828:16:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36855,
                        "name": "GROUP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36676,
                        "src": "868:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 36856,
                        "name": "leakId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36838,
                        "src": "878:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 36857,
                        "name": "LEAKER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36704,
                        "src": "886:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36852,
                        "name": "bl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36721,
                        "src": "854:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                          "typeString": "contract BlockLeaks"
                        }
                      },
                      "id": 36854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "857:10:36",
                      "memberName": "cancelLeak",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36382,
                      "src": "854:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes16_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes16,bytes32,address) external"
                      }
                    },
                    "id": 36858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "854:39:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36859,
                  "nodeType": "ExpressionStatement",
                  "src": "854:39:36"
                },
                {
                  "assignments": [
                    36861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36861,
                      "mutability": "mutable",
                      "name": "balAfter",
                      "nameLocation": "911:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36883,
                      "src": "903:16:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36860,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "903:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36864,
                  "initialValue": {
                    "expression": {
                      "id": 36862,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "922:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "929:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "922:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "903:33:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 36866,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "955:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 36867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "958:12:36",
                            "memberName": "messageCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35711,
                            "src": "955:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 36868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "955:17:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 36869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "976:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "955:22:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e63656c204c65616b206e6f7420636f756e74656420696e206d657373616765436f756e74",
                        "id": 36871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "979:41:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04b37898c29f4e6352915a98b69025726b3bb906c8d72380f45c88c8168ff5b6",
                          "typeString": "literal_string \"Cancel Leak not counted in messageCount\""
                        },
                        "value": "Cancel Leak not counted in messageCount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04b37898c29f4e6352915a98b69025726b3bb906c8d72380f45c88c8168ff5b6",
                          "typeString": "literal_string \"Cancel Leak not counted in messageCount\""
                        }
                      ],
                      "id": 36865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "947:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "947:74:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36873,
                  "nodeType": "ExpressionStatement",
                  "src": "947:74:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 36877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 36875,
                            "name": "balAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36861,
                            "src": "1039:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 36876,
                            "name": "balBefor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36833,
                            "src": "1050:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1039:19:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 36878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1062:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "1039:30:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b6520616d6f756e74206e6f742072657475726e6564",
                        "id": 36880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1071:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b157dba5e30df854485093a4cd5e7306423f587e8905196fc94cccb2770541d",
                          "typeString": "literal_string \"Stake amount not returned\""
                        },
                        "value": "Stake amount not returned"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b157dba5e30df854485093a4cd5e7306423f587e8905196fc94cccb2770541d",
                          "typeString": "literal_string \"Stake amount not returned\""
                        }
                      ],
                      "id": 36874,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1031:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:68:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36882,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:68:36"
                }
              ]
            },
            "functionSelector": "867f9350",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCancelLeak",
            "nameLocation": "666:14:36",
            "parameters": {
              "id": 36827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:2:36"
            },
            "returnParameters": {
              "id": 36828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "690:0:36"
            },
            "scope": 37125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36970,
            "nodeType": "FunctionDefinition",
            "src": "1112:513:36",
            "nodes": [],
            "body": {
              "id": 36969,
              "nodeType": "Block",
              "src": "1147:478:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36887,
                      "name": "testAddingLeak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36826,
                      "src": "1157:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:16:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36889,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:16:36"
                },
                {
                  "assignments": [
                    36894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36894,
                      "mutability": "mutable",
                      "name": "ratios",
                      "nameLocation": "1199:6:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36969,
                      "src": "1183:22:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36892,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1183:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 36893,
                        "nodeType": "ArrayTypeName",
                        "src": "1183:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36900,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 36898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1221:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 36897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1208:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36895,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 36896,
                        "nodeType": "ArrayTypeName",
                        "src": "1212:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 36899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1208:15:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1183:40:36"
                },
                {
                  "assignments": [
                    36905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36905,
                      "mutability": "mutable",
                      "name": "ids",
                      "nameLocation": "1250:3:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36969,
                      "src": "1233:20:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36903,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 36904,
                        "nodeType": "ArrayTypeName",
                        "src": "1233:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36911,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 36909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1270:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 36908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1256:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 36906,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1260:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 36907,
                        "nodeType": "ArrayTypeName",
                        "src": "1260:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 36910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1256:16:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1233:39:36"
                },
                {
                  "expression": {
                    "id": 36921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36912,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36905,
                        "src": "1282:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 36914,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 36913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1286:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1282:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "arguments": [
                          {
                            "id": 36917,
                            "name": "LEAKER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36704,
                            "src": "1313:6:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 36915,
                            "name": "bl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36721,
                            "src": "1291:2:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                              "typeString": "contract BlockLeaks"
                            }
                          },
                          "id": 36916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1294:18:36",
                          "memberName": "getLeaksIDBySender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36516,
                          "src": "1291:21:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                            "typeString": "function (address) view external returns (bytes32[] memory)"
                          }
                        },
                        "id": 36918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:29:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 36920,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 36919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1321:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1291:32:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1282:41:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 36922,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:41:36"
                },
                {
                  "expression": {
                    "id": 36927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36923,
                        "name": "ratios",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36894,
                        "src": "1333:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 36925,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 36924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1340:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1333:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230",
                      "id": 36926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1345:2:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "1333:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 36928,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:14:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36932,
                        "name": "MULTISIG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36698,
                        "src": "1366:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36929,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "1357:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 36931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1360:5:36",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12406,
                      "src": "1357:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 36933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36934,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:18:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36938,
                        "name": "ratios",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36894,
                        "src": "1401:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      {
                        "id": 36939,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36905,
                        "src": "1409:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 36935,
                        "name": "bl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36721,
                        "src": "1385:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                          "typeString": "contract BlockLeaks"
                        }
                      },
                      "id": 36937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1388:12:36",
                      "memberName": "evaluateLeak",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36192,
                      "src": "1385:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint32_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint32[] memory,bytes32[] memory) external"
                      }
                    },
                    "id": 36940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1385:28:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36941,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:28:36"
                },
                {
                  "assignments": [
                    36944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36944,
                      "mutability": "mutable",
                      "name": "leak_",
                      "nameLocation": "1435:5:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 36969,
                      "src": "1423:17:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Leak_$35678_memory_ptr",
                        "typeString": "struct Leak"
                      },
                      "typeName": {
                        "id": 36943,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 36942,
                          "name": "Leak",
                          "nameLocations": [
                            "1423:4:36"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35678,
                          "src": "1423:4:36"
                        },
                        "referencedDeclaration": 35678,
                        "src": "1423:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Leak_$35678_storage_ptr",
                          "typeString": "struct Leak"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36951,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 36947,
                          "name": "ids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36905,
                          "src": "1454:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 36949,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 36948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1458:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1454:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 36945,
                        "name": "bl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36721,
                        "src": "1443:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                          "typeString": "contract BlockLeaks"
                        }
                      },
                      "id": 36946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1446:7:36",
                      "memberName": "getLeak",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36529,
                      "src": "1443:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Leak_$35678_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct Leak memory)"
                      }
                    },
                    "id": 36950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Leak_$35678_memory_ptr",
                      "typeString": "struct Leak memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1423:38:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 36956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 36953,
                            "name": "leak_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36944,
                            "src": "1479:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Leak_$35678_memory_ptr",
                              "typeString": "struct Leak memory"
                            }
                          },
                          "id": 36954,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1485:16:36",
                          "memberName": "criticalRatioX10",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35659,
                          "src": "1479:22:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 36955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1505:2:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "1479:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437269746963616c526174696f206e6f742077656c6c20736574",
                        "id": 36957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1509:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0d6a776b02cc276de290487971703074b9e7375158547ff7530764cbb4db933",
                          "typeString": "literal_string \"CriticalRatio not well set\""
                        },
                        "value": "CriticalRatio not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0d6a776b02cc276de290487971703074b9e7375158547ff7530764cbb4db933",
                          "typeString": "literal_string \"CriticalRatio not well set\""
                        }
                      ],
                      "id": 36952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1471:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:67:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36959,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:67:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$35683",
                          "typeString": "enum Status"
                        },
                        "id": 36965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 36961,
                            "name": "leak_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36944,
                            "src": "1556:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Leak_$35678_memory_ptr",
                              "typeString": "struct Leak memory"
                            }
                          },
                          "id": 36962,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1562:6:36",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35655,
                          "src": "1556:12:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$35683",
                            "typeString": "enum Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 36963,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35683,
                            "src": "1572:6:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$35683_$",
                              "typeString": "type(enum Status)"
                            }
                          },
                          "id": 36964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1579:10:36",
                          "memberName": "UNVERIFIED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35680,
                          "src": "1572:17:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$35683",
                            "typeString": "enum Status"
                          }
                        },
                        "src": "1556:33:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c65616b20737461747573206e6f742077656c6c20736574",
                        "id": 36966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58db93114c122959ab2f3b2a3c674d06ab3ad94db6a9efe03475ed0bcbac0840",
                          "typeString": "literal_string \"Leak status not well set\""
                        },
                        "value": "Leak status not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58db93114c122959ab2f3b2a3c674d06ab3ad94db6a9efe03475ed0bcbac0840",
                          "typeString": "literal_string \"Leak status not well set\""
                        }
                      ],
                      "id": 36960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1548:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:70:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36968,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:70:36"
                }
              ]
            },
            "functionSelector": "2cf15649",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEvaluateLeak",
            "nameLocation": "1121:16:36",
            "parameters": {
              "id": 36885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:2:36"
            },
            "returnParameters": {
              "id": 36886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:0:36"
            },
            "scope": 37125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37038,
            "nodeType": "FunctionDefinition",
            "src": "1631:539:36",
            "nodes": [],
            "body": {
              "id": 37037,
              "nodeType": "Block",
              "src": "1666:504:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 36973,
                      "name": "testEvaluateLeak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36970,
                      "src": "1676:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 36974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36975,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:18:36"
                },
                {
                  "assignments": [
                    36977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36977,
                      "mutability": "mutable",
                      "name": "balOwnerMsgBefore",
                      "nameLocation": "1712:17:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37037,
                      "src": "1704:25:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36976,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1704:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36980,
                  "initialValue": {
                    "expression": {
                      "id": 36978,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "1732:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1739:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1732:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1704:42:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36984,
                        "name": "MULTISIG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36698,
                        "src": "1770:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 36981,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "1756:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 36983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1759:10:36",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12411,
                      "src": "1756:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 36985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:23:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36986,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:23:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "arguments": [
                            {
                              "id": 36992,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "1833:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 36990,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "1811:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 36991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1814:18:36",
                            "memberName": "getLeaksIDBySender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36516,
                            "src": "1811:21:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (address) view external returns (bytes32[] memory)"
                            }
                          },
                          "id": 36993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1811:29:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 36995,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 36994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1841:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1811:32:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 36987,
                        "name": "bl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36721,
                        "src": "1789:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                          "typeString": "contract BlockLeaks"
                        }
                      },
                      "id": 36989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1792:18:36",
                      "memberName": "withdrawToMsgOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35994,
                      "src": "1789:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 36996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:55:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36997,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:55:36"
                },
                {
                  "assignments": [
                    36999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36999,
                      "mutability": "mutable",
                      "name": "balOwnerMsgAfter",
                      "nameLocation": "1863:16:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37037,
                      "src": "1855:24:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 36998,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1855:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37002,
                  "initialValue": {
                    "expression": {
                      "id": 37000,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "1882:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1889:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1882:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1855:41:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37004,
                            "name": "balOwnerMsgAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36999,
                            "src": "1914:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 37005,
                            "name": "balOwnerMsgBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36977,
                            "src": "1933:17:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1914:36:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1954:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "1914:47:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776e2076616c7565206572726f72",
                        "id": 37009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6e8439f1d108e27e45708849ab55e525705316731f5e297687626b00ded13dc",
                          "typeString": "literal_string \"Withdrawn value error\""
                        },
                        "value": "Withdrawn value error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6e8439f1d108e27e45708849ab55e525705316731f5e297687626b00ded13dc",
                          "typeString": "literal_string \"Withdrawn value error\""
                        }
                      ],
                      "id": 37003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1906:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:81:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37011,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:81:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37015,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "2019:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37013,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "2005:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 37014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2008:10:36",
                            "memberName": "creditNote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35729,
                            "src": "2005:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 37016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2005:21:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2030:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "2005:32:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265646974206e6f7465206e6f742077656c6c20736574",
                        "id": 37019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2039:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab28d0ae52fbeb17230cbcb8b1446dc1a021921041b61945814d563b32c3f5de",
                          "typeString": "literal_string \"Credit note not well set\""
                        },
                        "value": "Credit note not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab28d0ae52fbeb17230cbcb8b1446dc1a021921041b61945814d563b32c3f5de",
                          "typeString": "literal_string \"Credit note not well set\""
                        }
                      ],
                      "id": 37012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1997:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:69:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37021,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:69:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        },
                        "id": 37028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37025,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "2098:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37023,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "2084:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 37024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2087:10:36",
                            "memberName": "trustScore",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35725,
                            "src": "2084:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int64_$",
                              "typeString": "function (address) view external returns (int64)"
                            }
                          },
                          "id": 37026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2084:21:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int64",
                            "typeString": "int64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3230",
                          "id": 37027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2109:2:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "2084:27:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547275737453636f7265206e6f742077656c6c20736574",
                        "id": 37029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2113:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80fb1deae72630949c5b46958bd93a6833beac4c1719a5054e04d8712202f890",
                          "typeString": "literal_string \"TrustScore not well set\""
                        },
                        "value": "TrustScore not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80fb1deae72630949c5b46958bd93a6833beac4c1719a5054e04d8712202f890",
                          "typeString": "literal_string \"TrustScore not well set\""
                        }
                      ],
                      "id": 37022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2076:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:63:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37031,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:63:36"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37032,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "2149:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 37034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2152:9:36",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12428,
                      "src": "2149:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 37035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:14:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37036,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:14:36"
                }
              ]
            },
            "functionSelector": "9892fbc6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testLeakVerified",
            "nameLocation": "1640:16:36",
            "parameters": {
              "id": 36971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1656:2:36"
            },
            "returnParameters": {
              "id": 36972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1666:0:36"
            },
            "scope": 37125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37124,
            "nodeType": "FunctionDefinition",
            "src": "2176:730:36",
            "nodes": [],
            "body": {
              "id": 37123,
              "nodeType": "Block",
              "src": "2207:699:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37041,
                      "name": "testEvaluateLeak",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36970,
                      "src": "2217:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2217:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37043,
                  "nodeType": "ExpressionStatement",
                  "src": "2217:18:36"
                },
                {
                  "assignments": [
                    37045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37045,
                      "mutability": "mutable",
                      "name": "balOwnerMsgBefore",
                      "nameLocation": "2253:17:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37123,
                      "src": "2245:25:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37044,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2245:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37048,
                  "initialValue": {
                    "expression": {
                      "id": 37046,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "2273:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2280:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2273:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2245:42:36"
                },
                {
                  "assignments": [
                    37050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37050,
                      "mutability": "mutable",
                      "name": "balMsigMsgBefore",
                      "nameLocation": "2305:16:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37123,
                      "src": "2297:24:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2297:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37053,
                  "initialValue": {
                    "expression": {
                      "id": 37051,
                      "name": "MULTISIG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36698,
                      "src": "2324:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2333:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2324:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2297:43:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37057,
                        "name": "MULTISIG",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36698,
                        "src": "2364:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 37054,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "2350:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 37056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2353:10:36",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12411,
                      "src": "2350:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 37058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:23:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37059,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:23:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "arguments": [
                            {
                              "id": 37065,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "2427:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37063,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "2405:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 37064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2408:18:36",
                            "memberName": "getLeaksIDBySender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36516,
                            "src": "2405:21:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (address) view external returns (bytes32[] memory)"
                            }
                          },
                          "id": 37066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2405:29:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 37068,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 37067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2435:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2405:32:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 37060,
                        "name": "bl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36721,
                        "src": "2383:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                          "typeString": "contract BlockLeaks"
                        }
                      },
                      "id": 37062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2386:18:36",
                      "memberName": "withdrawToMultisig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36057,
                      "src": "2383:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 37069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2383:55:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37070,
                  "nodeType": "ExpressionStatement",
                  "src": "2383:55:36"
                },
                {
                  "assignments": [
                    37072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37072,
                      "mutability": "mutable",
                      "name": "balOwnerMsgAfter",
                      "nameLocation": "2457:16:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37123,
                      "src": "2449:24:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37071,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2449:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37075,
                  "initialValue": {
                    "expression": {
                      "id": 37073,
                      "name": "LEAKER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36704,
                      "src": "2476:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2483:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2476:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2449:41:36"
                },
                {
                  "assignments": [
                    37077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37077,
                      "mutability": "mutable",
                      "name": "balMsigMsgAfter",
                      "nameLocation": "2508:15:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 37123,
                      "src": "2500:23:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37076,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2500:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37080,
                  "initialValue": {
                    "expression": {
                      "id": 37078,
                      "name": "MULTISIG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36698,
                      "src": "2526:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2535:7:36",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2526:16:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2500:42:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 37082,
                            "name": "balMsigMsgAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37077,
                            "src": "2560:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 37083,
                            "name": "balMsigMsgBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37050,
                            "src": "2578:16:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2560:34:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 37085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2598:7:36",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "2560:45:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776e2076616c7565206572726f7220746f206d736967",
                        "id": 37087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2607:31:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29bad442422828d10a1343d97c638b73041b6dfcf90df166fa99711ff85950e3",
                          "typeString": "literal_string \"Withdrawn value error to msig\""
                        },
                        "value": "Withdrawn value error to msig"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29bad442422828d10a1343d97c638b73041b6dfcf90df166fa99711ff85950e3",
                          "typeString": "literal_string \"Withdrawn value error to msig\""
                        }
                      ],
                      "id": 37081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2552:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:87:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37089,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:87:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37091,
                          "name": "balOwnerMsgAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37072,
                          "src": "2657:16:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37092,
                          "name": "balOwnerMsgBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37045,
                          "src": "2677:17:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2657:37:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57697468647261776e2076616c7565206572726f7220746f206d736967",
                        "id": 37094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2696:31:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29bad442422828d10a1343d97c638b73041b6dfcf90df166fa99711ff85950e3",
                          "typeString": "literal_string \"Withdrawn value error to msig\""
                        },
                        "value": "Withdrawn value error to msig"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29bad442422828d10a1343d97c638b73041b6dfcf90df166fa99711ff85950e3",
                          "typeString": "literal_string \"Withdrawn value error to msig\""
                        }
                      ],
                      "id": 37090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2649:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:79:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37096,
                  "nodeType": "ExpressionStatement",
                  "src": "2649:79:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37100,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "2760:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37098,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "2746:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 37099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2749:10:36",
                            "memberName": "creditNote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35729,
                            "src": "2746:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 37101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2746:21:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2771:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2746:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "437265646974206e6f7465206e6f742077656c6c20736574",
                        "id": 37104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2774:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab28d0ae52fbeb17230cbcb8b1446dc1a021921041b61945814d563b32c3f5de",
                          "typeString": "literal_string \"Credit note not well set\""
                        },
                        "value": "Credit note not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab28d0ae52fbeb17230cbcb8b1446dc1a021921041b61945814d563b32c3f5de",
                          "typeString": "literal_string \"Credit note not well set\""
                        }
                      ],
                      "id": 37097,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2738:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:63:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37106,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:63:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        },
                        "id": 37114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37110,
                              "name": "LEAKER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36704,
                              "src": "2833:6:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37108,
                              "name": "bl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36721,
                              "src": "2819:2:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlockLeaks_$36669",
                                "typeString": "contract BlockLeaks"
                              }
                            },
                            "id": 37109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2822:10:36",
                            "memberName": "trustScore",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35725,
                            "src": "2819:13:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_int64_$",
                              "typeString": "function (address) view external returns (int64)"
                            }
                          },
                          "id": 37111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:21:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int64",
                            "typeString": "int64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "2844:3:36",
                          "subExpression": {
                            "hexValue": "3230",
                            "id": 37112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2845:2:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_20_by_1",
                            "typeString": "int_const -20"
                          }
                        },
                        "src": "2819:28:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547275737453636f7265206e6f742077656c6c20736574",
                        "id": 37115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2849:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80fb1deae72630949c5b46958bd93a6833beac4c1719a5054e04d8712202f890",
                          "typeString": "literal_string \"TrustScore not well set\""
                        },
                        "value": "TrustScore not well set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80fb1deae72630949c5b46958bd93a6833beac4c1719a5054e04d8712202f890",
                          "typeString": "literal_string \"TrustScore not well set\""
                        }
                      ],
                      "id": 37107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2811:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:64:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37117,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:64:36"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37118,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2344,
                        "src": "2885:2:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12793",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 37120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2888:9:36",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12428,
                      "src": "2885:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 37121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2885:14:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37122,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:14:36"
                }
              ]
            },
            "functionSelector": "b54195a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFakeLeak",
            "nameLocation": "2185:12:36",
            "parameters": {
              "id": 37039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2197:2:36"
            },
            "returnParameters": {
              "id": 37040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2207:0:36"
            },
            "scope": 37125,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36767,
              "name": "BlockLeaksTest",
              "nameLocations": [
                "147:14:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36762,
              "src": "147:14:36"
            },
            "id": 36768,
            "nodeType": "InheritanceSpecifier",
            "src": "147:14:36"
          }
        ],
        "canonicalName": "TestLeak",
        "contractDependencies": [
          36669
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37125,
          36762,
          11311,
          2351,
          2348,
          11262,
          7041,
          6751,
          6072,
          4475,
          3781,
          2291
        ],
        "name": "TestLeak",
        "nameLocation": "135:8:36",
        "scope": 37126,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 36
}